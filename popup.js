(()=>{document.getElementById("kills"),document.getElementById("deaths"),document.getElementById("matches"),document.getElementById("matches-list");const e=document.getElementById("statsBtn"),t=document.getElementById("hudBtn"),a=document.getElementById("statsSection"),s=document.getElementById("hudSection");a.classList.add("active"),e.addEventListener("click",(()=>{e.classList.add("selected"),t.classList.remove("selected"),a.style.display="block",s.style.display="none"})),t.addEventListener("click",(()=>{t.classList.add("selected"),e.classList.remove("selected"),a.style.display="none",s.style.display="block"})),document.getElementById("playerCardBtn").addEventListener("click",(()=>{chrome.tabs.create({url:"player-card.html"})})),document.getElementById("statsNumbersBtn").addEventListener("click",(()=>{chrome.tabs.create({url:"stats-numbers.html"})})),document.getElementById("logoImage").addEventListener("click",(()=>{chrome.tabs.create({url:"about.html"})}));const n=document.getElementById("toggleDeathsHud"),o=document.getElementById("toggleKillStreakHud"),l=document.getElementById("toggleKdrHud"),i=document.getElementById("toggleMatchCodeHud");function c(e){return e?new Date(e).toLocaleString(void 0,{hour:"2-digit",minute:"2-digit",second:"2-digit",year:"2-digit",month:"2-digit",day:"2-digit"}):"-"}function r(e,t){return 0===t?e>0?e.toFixed(2):"0.00":(e/t).toFixed(2)}function d(e){const t=Math.floor(e/1e3),a=Math.floor(t/3600),s=Math.floor(t%3600/60),n=t%60;return a>0?`${a}h ${s}m ${n}s`:s>0?`${s}m ${n}s`:`${n}s`}chrome.storage.sync.get(["deathsHudEnabled","killStreakHudEnabled","kdrHudEnabled","matchCodeHudEnabled"],(e=>{n.checked=!1!==e.deathsHudEnabled,o.checked=!1!==e.killStreakHudEnabled,l.checked=!1!==e.kdrHudEnabled,i.checked=!1!==e.matchCodeHudEnabled})),n.addEventListener("change",(()=>{chrome.storage.sync.set({deathsHudEnabled:n.checked}),chrome.tabs.query({active:!0,currentWindow:!0},(e=>{e[0]&&chrome.tabs.sendMessage(e[0].id,{type:"toggle-deaths-hud",enabled:n.checked}).catch((()=>{console.log("[SKMT] Popup: Message port closed, ignoring error")}))}))})),o.addEventListener("change",(()=>{chrome.storage.sync.set({killStreakHudEnabled:o.checked}),chrome.tabs.query({active:!0,currentWindow:!0},(e=>{e[0]&&chrome.tabs.sendMessage(e[0].id,{type:"toggle-killstreak-hud",enabled:o.checked}).catch((()=>{console.log("[SKMT] Popup: Message port closed, ignoring error")}))}))})),l.addEventListener("change",(()=>{chrome.storage.sync.set({kdrHudEnabled:l.checked}),chrome.tabs.query({active:!0,currentWindow:!0},(e=>{e[0]&&chrome.tabs.sendMessage(e[0].id,{type:"toggle-kdr-hud",enabled:l.checked}).catch((()=>{console.log("[SKMT] Popup: Message port closed, ignoring error")}))}))})),i.addEventListener("change",(()=>{chrome.storage.sync.set({matchCodeHudEnabled:i.checked}),chrome.tabs.query({active:!0,currentWindow:!0},(e=>{e[0]&&chrome.tabs.sendMessage(e[0].id,{type:"toggle-matchcode-hud",enabled:i.checked}).catch((()=>{console.log("[SKMT] Popup: Message port closed, ignoring error")}))}))})),chrome.storage.sync.get(["deathsHudEnabled","killStreakHudEnabled","kdrHudEnabled","matchCodeHudEnabled"],(e=>{n.checked=!1!==e.deathsHudEnabled,o.checked=!1!==e.killStreakHudEnabled,l.checked=!1!==e.kdrHudEnabled,i.checked=!1!==e.matchCodeHudEnabled,chrome.tabs.query({active:!0,currentWindow:!0},(e=>{if(e[0]){const t=t=>{chrome.tabs.sendMessage(e[0].id,t).catch((()=>{console.log("[SKMT] Popup: Message port closed, ignoring error")}))};t({type:"toggle-deaths-hud",enabled:n.checked}),t({type:"toggle-killstreak-hud",enabled:o.checked}),t({type:"toggle-kdr-hud",enabled:l.checked}),t({type:"toggle-matchcode-hud",enabled:i.checked})}}))}));let m="Default",h="normal",u="all",g={primaryStats:!1,secondaryStats:!1,averageStats:!1,streaks:!1,quickKills:!1};const p=document.getElementById("modeGraphicsBtn");function y(e,t,a){const s=a||h;return"all"===s?null:`${e}_${t}_${s}`}function S(){document.getElementById("normalModeBtn").classList.toggle("selected","normal"===h),document.getElementById("specialModeBtn").classList.toggle("selected","special"===h),document.getElementById("customModeBtn").classList.toggle("selected","custom"===h),document.getElementById("allStatsBtn").classList.toggle("selected","all"===h),document.getElementById("primaryStatsHeader").textContent="all"===h?"All Modes Primary Stats":"Primary Stats",document.getElementById("secondaryStatsHeader").textContent="all"===h?"All Modes Secondary Stats":"Secondary Stats",function(){let e="",t="";switch(h){case"normal":e="3 Minute Mode Graphics",t="3min-mode.html";break;case"special":e="Special Mode Graphics",t="special-mode.html";break;case"custom":e="Custom Match Graphics",t="custom-mode.html";break;case"all":e="All Stats Graphics",t="visualizers.html";break;default:e="Graphics",t=""}p.textContent=e,p.dataset.targetUrl=t}()}function k(){chrome.storage.sync.get(["currentSkid"],(e=>{m=e.currentSkid||"Default",document.getElementById("skidValue").textContent=m;const t=["currentSkid"],a=["normal","special","custom"];t.push(`favoriteMatches_${m}`),"all"===h?a.forEach((e=>{t.push(y("matchHistory",m,e)),t.push(y("gamesJoined",m,e)),t.push(y("gamesStarted",m,e)),t.push(y("gamesQuit",m,e)),t.push(y("matchesCompleted",m,e))})):(t.push(y("matchHistory",m,h)),t.push(y("gamesJoined",m,h)),t.push(y("gamesStarted",m,h)),t.push(y("gamesQuit",m,h)),t.push(y("matchesCompleted",m,h))),console.log("[SKMT][LOAD] Loading stats for SKID:",m,"Mode:",h,"Keys:",t),chrome.storage.sync.get(t,(e=>{console.log("[SKMT][LOAD] Data returned from chrome.storage.sync:",e),P=e[`favoriteMatches_${m}`]||{},console.log("[SKMT][POPUP] Loaded favorite matches:",P),("all"===h?a:[h]).forEach((t=>{const a=y("matchHistory",m,t);e[a]&&e[a].forEach((e=>{e.favorite=!0===P[e.matchStartTime]}))})),document.querySelector(".match-history").style.display="block",function(e,t){let a=[],s=new Map;"all"===t?["normal","special","custom"].forEach((t=>{const n=e[y("matchHistory",m,t)]||[];a=a.concat(n),n.forEach((e=>{if(e.map){const t=s.get(e.map)||0;s.set(e.map,t+1)}}))})):(a=e[y("matchHistory",m,t)]||[],a.forEach((e=>{if(e.map){const t=s.get(e.map)||0;s.set(e.map,t+1)}})));const n=document.getElementById("mapFilter"),o=n.value||"all";n.innerHTML='<option value="all">All Maps</option>',Array.from(s.entries()).sort(((e,t)=>t[1]-e[1])).forEach((([e,t])=>{const a=document.createElement("option");a.value=e,a.textContent=e,n.appendChild(a)})),[...n.options].some((e=>e.value===o))?(n.value=o,u=o):(n.value="all",u="all");const l="all"===u?a:a.filter((e=>e.map===u));let i=0,h=0,g=0;l.forEach((e=>{i+=e.kills||0,h+=e.deaths||0,g+=e.duration||(e.matchEndTime&&e.matchStartTime?e.matchEndTime-e.matchStartTime:0)}));let p=0;"all"===t?["normal","special","custom"].forEach((t=>{p+=e[y("gamesQuit",m,t)]||0})):p=e[y("gamesQuit",m,t)]||0,console.log("[SKMT][DISPLAY] Current gamesQuit value:",p,"Mode:",t),document.getElementById("gamesQuit").textContent=p;const S=document.getElementById("mapsList");S.innerHTML="";const E=Array.from(s.entries()).sort(((e,t)=>t[1]-e[1]));if(E.forEach((([e,t])=>{const a=document.createElement("div");a.className="stat-card",a.innerHTML=`\n            <span class="stat-label">${e}</span>\n            <span class="stat-value">${t}</span>\n        `,S.appendChild(a)})),0===E.length){const e=document.createElement("div");e.className="no-maps",e.textContent="No maps played yet in this mode",S.appendChild(e)}let f=0,v=0,M=0,T=0,b=0,B=0,I=0,C=0,x=0,w=0,L=0,$=0,K=0,H=0,D=0,U=0,A=0,z=0,F=0,O=0,q=0,R=0;l.forEach((e=>{e.kills>T&&(T=e.kills),e.deaths>b&&(b=e.deaths);const t=e.deaths>0?e.kills/e.deaths:e.kills;t>I&&(I=t);const a=e.duration||(e.matchEndTime&&e.matchStartTime?e.matchEndTime-e.matchStartTime:0);if(a>C&&(C=a),e.killTimestamps&&e.killTimestamps.length>0){let t=0,a=0;const s=[];e.killTimestamps&&e.killTimestamps.forEach((e=>s.push({type:"kill",time:e}))),e.deathTimestamps&&e.deathTimestamps.forEach((e=>s.push({type:"death",time:e}))),s.sort(((e,t)=>e.time-t.time)),s.forEach((e=>{"death"===e.type?(t>a&&(a=t),t=0):"kill"===e.type&&(t++,t>a&&(a=t))})),a>B&&(B=a)}let s=0,n=null,o=0,l={};const i=[];e.killTimestamps&&e.killTimestamps.forEach((e=>i.push({type:"kill",time:e}))),e.deathTimestamps&&e.deathTimestamps.forEach((e=>i.push({type:"death",time:e}))),i.sort(((e,t)=>e.time-t.time)),i.forEach((e=>{"death"===e.type?(s=0,l={},o=0,n=null):"kill"===e.type&&(s++,s>=3&&!l[3]&&(x++,l[3]=!0),s>=5&&!l[5]&&(w++,l[5]=!0),s>=7&&!l[7]&&(L++,l[7]=!0),s>=10&&!l[10]&&($++,l[10]=!0),s>=15&&!l[15]&&(K++,l[15]=!0),s>=20&&!l[20]&&(H++,l[20]=!0),s>=25&&!l[25]&&(D++,l[25]=!0),s>=30&&!l[30]&&(U++,l[30]=!0),null===n?(o=1,n=e.time):(e.time-n<=4e3?(o++,2===o&&A++,3===o&&z++,4===o&&F++,5===o&&O++,6===o&&q++,7===o&&R++):o=1,n=e.time))})),e.joined&&f++,e.started&&v++,e.quit&&p++,e.quit||M++})),document.getElementById("highestKillsRecord").textContent=T,document.getElementById("highestDeathsRecord").textContent=b,document.getElementById("highestKillStreakRecord").textContent=B,document.getElementById("highestKDRRecord").textContent=I.toFixed(2),document.getElementById("longestTimePlayedRecord").textContent=d(C),document.getElementById("smashStreak").textContent=x,document.getElementById("smashtacularStreak").textContent=w,document.getElementById("smashosaurusStreak").textContent=L,document.getElementById("smashlvaniaStreak").textContent=$,document.getElementById("monsterSmashStreak").textContent=K,document.getElementById("potatoStreak").textContent=H,document.getElementById("smashSmashStreak").textContent=D,document.getElementById("potoatachioStreak").textContent=U,document.getElementById("doubleSmash").textContent=A,document.getElementById("multiSmash").textContent=z,document.getElementById("multiMegaSmash").textContent=F,document.getElementById("multiMegaUltraSmash").textContent=O,document.getElementById("gooseySmash").textContent=q,document.getElementById("crazyMultiMegaUltraSmash").textContent=R,document.getElementById("streaksHeader").textContent="all"===t?"All Modes Streaks (Without Dying)":"Streaks (Without Dying)",document.getElementById("quickKillsHeader").textContent="all"===t?"All Modes Streaks (Quick Kills)":"Streaks (Quick Kills)";const _=(M||0)+(p||0);document.getElementById("killsLabel").textContent="all"===t?"Total Kills":"Kills",document.getElementById("deathsLabel").textContent="all"===t?"Total Deaths":"Deaths",document.getElementById("kdrLabel").textContent="all"===t?"Overall KDR":"KDR",document.getElementById("matchesCompletedLabel").textContent="all"===t?"Total Matches Completed":"Matches Completed",document.getElementById("totalTimeSpentLabel").textContent="all"===t?"Total Time Played":"Time Played",document.getElementById("gamesJoinedLabel").textContent="all"===t?"Total Matches Joined":"Matches Joined",document.getElementById("totalMatchesLabel").textContent="Total Matches (Completed + Quit)",console.log("[SKMT][POPUP][DISPLAY] Updating gamesQuit display. Value:",p,"Element:",document.getElementById("gamesQuit")),document.getElementById("kills").textContent=i,document.getElementById("deaths").textContent=h,document.getElementById("kdr").textContent=r(i,h),document.getElementById("totalTimeSpent").textContent=d(g),document.getElementById("gamesJoined").textContent=f,document.getElementById("gamesStarted").textContent=v,document.getElementById("gamesQuit").textContent=p,document.getElementById("matchesCompleted").textContent=M,document.getElementById("totalMatches").textContent=_;const N=_>0?(M||0)/_*100:0,Q=_>0?(p||0)/_*100:0;document.getElementById("matchesCompletedRate").textContent=`${N.toFixed(2)}%`,document.getElementById("matchesQuitRate").textContent=`${Q.toFixed(2)}%`;const j=l.filter((e=>!e.quit)).length,J=j>0?i/j:0,G=j>0?h/j:0,W=j>0?g/j:0;document.getElementById("avgKills").textContent=J.toFixed(2),document.getElementById("avgDeaths").textContent=G.toFixed(2),document.getElementById("avgTimeSpent").textContent=d(W),document.getElementById("averageStatsHeader").textContent="all"===t?"All Modes Average Stats":"Average Stats",document.getElementById("matches-list").innerHTML="";let V=[];if("all"===t){const t=[];["normal","special","custom"].forEach((a=>{(e[y("matchHistory",m,a)]||[]).forEach((e=>{t.push({...e,mode:a})}))})),V=t}else V=a.slice().reverse();const Y=document.getElementById("matchSortSelect")?document.getElementById("matchSortSelect").value:"recent";"recent"===Y?V.sort(((e,t)=>(t.matchStartTime||0)-(e.matchStartTime||0))):"oldest"===Y?V.sort(((e,t)=>(e.matchStartTime||0)-(t.matchStartTime||0))):"kills"===Y?V.sort(((e,t)=>(t.kills||0)-(e.kills||0))):"favorites"===Y&&(V=V.filter((e=>P[e.matchStartTime])),V.sort(((e,t)=>(t.matchStartTime||0)-(e.matchStartTime||0)))),function(e){const t=document.getElementById("matches-list");t.innerHTML="",e.forEach(((a,s)=>{const n=document.createElement("div");n.className="match-card";const o=document.createElement("div");o.className="match-card-content";const l=document.createElement("div");if(l.className="match-meta",l.textContent=`#${e.length-s} | ${c(a.matchStartTime)} - ${c(a.matchEndTime)}`,o.appendChild(l),a.map){const e=document.createElement("div");e.className="match-map",e.textContent=a.map,o.appendChild(e)}const i=document.createElement("div");i.className="match-stats",i.innerHTML="",i.innerHTML+=`<span>Kills:</span><b>${a.kills}</b>`,i.innerHTML+=`<span>Deaths:</span><b>${a.deaths}</b>`,i.innerHTML+=`<span>KDR:</span><b>${r(a.kills,a.deaths)}</b>`;const h=a.duration||(a.matchEndTime&&a.matchStartTime?a.matchEndTime-a.matchStartTime:0),u=Math.floor(h/36e5),g=Math.floor(h%36e5/6e4),p=Math.floor(h%6e4/1e3);let y;y=u>0?`${u}h ${g}m ${p}s`:`${g}m ${p}s`,i.innerHTML+=`<span>Duration:</span><b>${y}</b>`,o.appendChild(i);const S=document.createElement("div");S.className="match-flags";let E=[];a.joined&&E.push("Joined"),a.started&&E.push("Started"),a.quit?E.push("Quit"):E.push("Completed"),a.isSpecialMode&&E.push("Special Mode"),a.isCustomMode&&E.push("Custom Match"),a.mode&&E.push(`${a.mode.charAt(0).toUpperCase()+a.mode.slice(1)} Mode`),E.length>0&&(S.textContent=E.join(" | ")),o.appendChild(S);const f=document.createElement("button");f.className="star-btn",f.title="Favorite this match",f.innerHTML='<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><polygon points="10,2 12.59,7.36 18.51,8.09 14,12.26 15.18,18.09 10,15.27 4.82,18.09 6,12.26 1.49,8.09 7.41,7.36" stroke="#FFD700" stroke-width="1.5" fill="'+(a.favorite?"#FFD700":"white")+'"/></svg>',f.style.background="none",f.style.border="none",f.style.cursor="pointer",f.style.marginRight="4px",f.onclick=async()=>{a.favorite=!a.favorite,f.querySelector("polygon").setAttribute("fill",a.favorite?"#FFD700":"white"),a.favorite?P[a.matchStartTime]=!0:delete P[a.matchStartTime],await async function(){const e=`favoriteMatches_${m||"Default"}`;await new Promise((t=>chrome.storage.sync.set({[e]:P},t))),console.log("[SKMT][POPUP] Saved favorite matches to storage.",P)}(),"favorites"===(document.getElementById("matchSortSelect")?document.getElementById("matchSortSelect").value:"recent")&&k()};const v=document.createElement("button");v.className="share-btn",v.title="Share match link",v.innerHTML='<svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1" stroke="#4a90e2" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>',v.style.background="none",v.style.border="none",v.style.cursor="pointer",v.style.marginRight="4px",v.onclick=()=>{const e=[];a.joined&&e.push("Joined"),a.started&&e.push("Started"),a.quit?e.push("Quit"):e.push("Completed"),a.isSpecialMode&&e.push("Special Mode"),a.isCustomMode&&e.push("Custom Match"),a.mode&&e.push(`${a.mode.charAt(0).toUpperCase()+a.mode.slice(1)} Mode`);const t=a.highestKillStreak||0,s={smashStreak:a.smashStreak||0,smashtacularStreak:a.smashtacularStreak||0,smashosaurusStreak:a.smashosaurusStreak||0,smashlvaniaStreak:a.smashlvaniaStreak||0,monsterSmashStreak:a.monsterSmashStreak||0,potatoStreak:a.potatoStreak||0,smashSmashStreak:a.smashSmashStreak||0,potoatachioStreak:a.potoatachioStreak||0},n={quickKillStreak:a.quickKillStreak||0,quickKillStreak2:a.quickKillStreak2||0,quickKillStreak3:a.quickKillStreak3||0,quickKillStreak4:a.quickKillStreak4||0,quickKillStreak5:a.quickKillStreak5||0},o={id:a.id,timestamp:a.matchStartTime,map:a.map,mode:a.isSpecialMode?"special":a.isCustomMode?"custom":"normal",kills:a.kills,deaths:a.deaths,duration:a.duration,players:a.players,indicators:e,highestKillStreak:t,streaksWithoutDying:s,quickKillsStreaks:n,startTime:a.matchStartTime||a.startTime,endTime:a.matchEndTime||a.endTime,statusIndicators:e},l=`https://leafbolt8.github.io/Kart-Companion/match-viewer.html?match=${btoa(JSON.stringify(o))}`;navigator.clipboard.writeText(l).then((()=>{const e=document.createElement("div");e.textContent="Link copied!",e.style.position="fixed",e.style.backgroundColor="#4a90e2",e.style.color="white",e.style.padding="8px 12px",e.style.borderRadius="4px",e.style.fontSize="14px",e.style.zIndex="10000",e.style.top="10px",e.style.left="50%",e.style.transform="translateX(-50%)",document.body.appendChild(e),setTimeout((()=>{document.body.removeChild(e)}),2e3)}))};const M=document.createElement("button");M.className="info-btn",M.title="View match information",M.innerHTML='<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="10" cy="10" r="9" stroke="#3498db" stroke-width="2" fill="white"/><rect x="9" y="8" width="2" height="6" rx="1" fill="#3498db"/><rect x="9" y="5" width="2" height="2" rx="1" fill="#3498db"/></svg>',M.onclick=()=>function(e){const t=document.getElementById("matchInfoModal"),a=document.getElementById("match-info-modal-body");let s=[];e.joined&&s.push("Joined"),e.started&&s.push("Started"),e.quit?s.push("Quit"):s.push("Completed"),e.isSpecialMode&&s.push("Special Mode"),e.isCustomMode&&s.push("Custom Match"),e.mode&&s.push(`${e.mode.charAt(0).toUpperCase()+e.mode.slice(1)} Mode`);const n=e.duration||(e.matchEndTime&&e.matchStartTime?e.matchEndTime-e.matchStartTime:0);let o=0,l={smashStreak:0,smashtacularStreak:0,smashosaurusStreak:0,smashlvaniaStreak:0,monsterSmashStreak:0,potatoStreak:0,smashSmashStreak:0,potoatachioStreak:0},i={doubleSmash:0,multiSmash:0,multiMegaSmash:0,multiMegaUltraSmash:0,gooseySmash:0,crazyMultiMegaUltraSmash:0};if(e.killTimestamps&&e.killTimestamps.length>0){let t=0,a=0,s=0,n=null,c={};const r=[];e.killTimestamps&&e.killTimestamps.forEach((e=>r.push({type:"kill",time:e}))),e.deathTimestamps&&e.deathTimestamps.forEach((e=>r.push({type:"death",time:e}))),r.sort(((e,t)=>e.time-t.time)),r.forEach((e=>{"death"===e.type?(t>a&&(a=t),t=0,c={},s=0,n=null):"kill"===e.type&&(t++,t>a&&(a=t),t>=3&&!c[3]&&(l.smashStreak++,c[3]=!0),t>=5&&!c[5]&&(l.smashtacularStreak++,c[5]=!0),t>=7&&!c[7]&&(l.smashosaurusStreak++,c[7]=!0),t>=10&&!c[10]&&(l.smashlvaniaStreak++,c[10]=!0),t>=15&&!c[15]&&(l.monsterSmashStreak++,c[15]=!0),t>=20&&!c[20]&&(l.potatoStreak++,c[20]=!0),t>=25&&!c[25]&&(l.smashSmashStreak++,c[25]=!0),t>=30&&!c[30]&&(l.potoatachioStreak++,c[30]=!0),null===n?(s=1,n=e.time):(e.time-n<=4e3?(s++,2===s&&i.doubleSmash++,3===s&&i.multiSmash++,4===s&&i.multiMegaSmash++,5===s&&i.multiMegaUltraSmash++,6===s&&i.gooseySmash++,7===s&&i.crazyMultiMegaUltraSmash++):s=1,n=e.time))})),o=a}let m=[];Array.isArray(e.players)&&(m=[...new Set(e.players)]),a.innerHTML=`\n        <div class="match-info-title">Match Information</div>\n        ${e.map?`<div class="match-info-section"><span class="match-info-label">Map:</span><span class="match-info-value">${e.map}</span></div>`:""}\n        <div class="match-info-section"><span class="match-info-label">Start:</span><span class="match-info-value">${c(e.matchStartTime)}</span></div>\n        <div class="match-info-section"><span class="match-info-label">End:</span><span class="match-info-value">${c(e.matchEndTime)}</span></div>\n        <div class="match-info-section"><span class="match-info-label">Kills:</span><span class="match-info-value">${e.kills}</span></div>\n        <div class="match-info-section"><span class="match-info-label">Deaths:</span><span class="match-info-value">${e.deaths}</span></div>\n        <div class="match-info-section"><span class="match-info-label">KDR:</span><span class="match-info-value">${r(e.kills,e.deaths)}</span></div>\n        <div class="match-info-section"><span class="match-info-label">Duration:</span><span class="match-info-value">${d(n)}</span></div>\n        <div class="match-info-section"><span class="match-info-label">Highest Kill Streak:</span><span class="match-info-value">${o}</span></div>\n        \n        ${Object.values(l).some((e=>e>0))?`\n        <div class="match-info-section">\n            <span class="match-info-label" style="display:block;margin-bottom:6px;">Streaks (Without Dying):</span>\n            <ul style="margin:0 0 0 12px;padding:0;list-style:disc;">\n                ${l.smashStreak>0?`<li style='font-size:16px;'>Smash Streak (3): ${l.smashStreak}</li>`:""}\n                ${l.smashtacularStreak>0?`<li style='font-size:16px;'>Smashtacular Streak (5): ${l.smashtacularStreak}</li>`:""}\n                ${l.smashosaurusStreak>0?`<li style='font-size:16px;'>Smashosaurus Streak (7): ${l.smashosaurusStreak}</li>`:""}\n                ${l.smashlvaniaStreak>0?`<li style='font-size:16px;'>Smashlvania Streak (10): ${l.smashlvaniaStreak}</li>`:""}\n                ${l.monsterSmashStreak>0?`<li style='font-size:16px;'>Monster Smash Streak (15): ${l.monsterSmashStreak}</li>`:""}\n                ${l.potatoStreak>0?`<li style='font-size:16px;'>Potato Streak (20): ${l.potatoStreak}</li>`:""}\n                ${l.smashSmashStreak>0?`<li style='font-size:16px;'>Smash Smash Streak (25): ${l.smashSmashStreak}</li>`:""}\n                ${l.potoatachioStreak>0?`<li style='font-size:16px;'>Potoatachio Streak (30): ${l.potoatachioStreak}</li>`:""}\n            </ul>\n        </div>\n        `:""}\n\n        ${Object.values(i).some((e=>e>0))?`\n        <div class="match-info-section">\n            <span class="match-info-label" style="display:block;margin-bottom:6px;">Streaks (Quick Kills):</span>\n            <ul style="margin:0 0 0 12px;padding:0;list-style:disc;">\n                ${i.doubleSmash>0?`<li style='font-size:16px;'>Double Smash (2): ${i.doubleSmash}</li>`:""}\n                ${i.multiSmash>0?`<li style='font-size:16px;'>Multi Smash (3): ${i.multiSmash}</li>`:""}\n                ${i.multiMegaSmash>0?`<li style='font-size:16px;'>Multi Mega Smash (4): ${i.multiMegaSmash}</li>`:""}\n                ${i.multiMegaUltraSmash>0?`<li style='font-size:16px;'>Multi Mega Ultra Smash (5): ${i.multiMegaUltraSmash}</li>`:""}\n                ${i.gooseySmash>0?`<li style='font-size:16px;'>Goosey Smash (6): ${i.gooseySmash}</li>`:""}\n                ${i.crazyMultiMegaUltraSmash>0?`<li style='font-size:16px;'>Crazy Multi Mega Ultra Smash (7): ${i.crazyMultiMegaUltraSmash}</li>`:""}\n            </ul>\n        </div>\n        `:""}\n\n        <div class="match-info-section">\n            <span class="match-info-label" style="display:block;margin-bottom:6px;">Detected Players In Room:</span>\n            <ul style="margin:0 0 0 12px;padding:0;list-style:disc;">\n                ${m.length>0?m.map((e=>`<li style='font-size:16px;'>${e}</li>`)).join(""):'<li style="color:#aaa;font-size:16px;">No players detected</li>'}\n            </ul>\n        </div>\n        <div class="match-info-indicators">${s.join(" | ")}</div>\n    `,t.style.display="flex"}(a),n.appendChild(o),n.appendChild(f),n.appendChild(v),n.appendChild(M),t.appendChild(n)}))}(V)}(e,h)}))}))}document.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("skidValue"),t=document.getElementById("toggleSkidBtn"),a=document.getElementById("copySkidBtn");chrome.storage.sync.get(["skidBlurred"],(a=>{if(a.skidBlurred){e.classList.add("skid-blurred");const a=t.querySelector("i");a.classList.remove("fa-eye"),a.classList.add("fa-eye-slash")}})),t.addEventListener("click",(()=>{e.classList.toggle("skid-blurred");const a=t.querySelector("i");e.classList.contains("skid-blurred")?(a.classList.remove("fa-eye"),a.classList.add("fa-eye-slash"),chrome.storage.sync.set({skidBlurred:!0})):(a.classList.remove("fa-eye-slash"),a.classList.add("fa-eye"),chrome.storage.sync.set({skidBlurred:!1}))})),a.addEventListener("click",(()=>{const t=e.textContent;t&&"-"!==t&&navigator.clipboard.writeText(t).then((()=>{const e=a.getAttribute("title");a.setAttribute("title","Copied!");const t=a.querySelector("i");t.classList.remove("fa-copy"),t.classList.add("fa-check"),setTimeout((()=>{a.setAttribute("title",e),t.classList.remove("fa-check"),t.classList.add("fa-copy")}),2e3)}))})),document.getElementById("normalModeBtn").addEventListener("click",(()=>{h="normal",S(),k()})),document.getElementById("specialModeBtn").addEventListener("click",(()=>{h="special",S(),k()})),document.getElementById("customModeBtn").addEventListener("click",(()=>{h="custom",S(),k()})),document.getElementById("allStatsBtn").addEventListener("click",(()=>{h="all",S(),k()})),p&&p.addEventListener("click",(()=>{const e=p.dataset.targetUrl;e&&chrome.tabs.create({url:e})})),document.querySelectorAll(".stats-details").forEach((e=>{e.addEventListener("toggle",(()=>{document.querySelectorAll(".stats-details").forEach((e=>{const t=e.querySelector(".stats-section-label").id;g[t]=e.hasAttribute("open")})),chrome.storage.local.set({openSections:g})}))})),document.getElementById("exportStatsBtn").addEventListener("click",I),document.getElementById("importStatsBtn").addEventListener("click",(()=>{document.getElementById("importStatsInput").click()})),document.getElementById("importStatsInput").addEventListener("change",(e=>{e.target.files.length>0&&(async function(e){try{const t=new FileReader;t.onload=async function(e){try{const t=(new TextDecoder).decode(e.target.result),a=await async function(e){try{await B();const t=e.match(/^SKMT_ENCRYPTED_v(\d+\.\d+)_(.+)$/);if(!t)throw new Error("Invalid encrypted data format");if(t[1]!==T)throw new Error("Incompatible encryption version");const a=t[2],s=new Uint8Array(atob(a).split("").map((e=>e.charCodeAt(0)))),n=s.slice(0,12),o=s.slice(12),l=await crypto.subtle.decrypt({name:"AES-GCM",iv:n},b,o),i=new TextDecoder;return JSON.parse(i.decode(l))}catch(e){throw console.error("Decryption error:",e),new Error("Failed to decrypt data")}}(t);if(a.skid!==m)throw new Error("Stats file SKID does not match current SKID");const s=31536e6;if(Date.now()-a.timestamp>s)throw new Error("Stats file is too old");if(!confirm("Are you sure you want to import these stats? This will overwrite your current stats."))return;if(await new Promise((e=>{chrome.storage.sync.set(a.data,e)})),a.data.uiState){const e=a.data.uiState;e.currentMode&&(h=e.currentMode,document.querySelectorAll(".mode-btn").forEach((e=>{e.classList.toggle("active",e.dataset.mode===h)}))),e.openSections&&await new Promise((t=>{chrome.storage.local.set({openSections:e.openSections},t)}))}k(),alert("Stats imported successfully!")}catch(e){console.error("Error processing imported stats:",e),alert(e.message||"Failed to import stats. The file may be corrupted or invalid.")}},t.onerror=function(){alert("Error reading file. Please try again.")},t.readAsArrayBuffer(e)}catch(e){console.error("Error importing stats:",e),alert("Failed to import stats. Please try again.")}}(e.target.files[0]),e.target.value="")})),document.getElementById("visualizeStatsBtn").addEventListener("click",(()=>{console.log("[SKMT] Visualize Stats button clicked");const e=document.getElementById("visualizeStatsBtn");e.disabled=!0;try{chrome.runtime.sendMessage({type:"OPEN_VISUALIZERS"},(t=>(e.disabled=!1,chrome.runtime.lastError?(console.error("[SKMT] Error opening visualizers:",chrome.runtime.lastError),void alert("Failed to open visualizers: "+chrome.runtime.lastError.message)):t?t.success?void console.log("[SKMT] Successfully opened visualizers in tab:",t.tabId):(console.error("[SKMT] Failed to open visualizers:",t.error),void alert("Failed to open visualizers: "+(t.error||"Unknown error"))):(console.error("[SKMT] No response received from background script"),void alert("Failed to open visualizers: No response received")))))}catch(t){e.disabled=!1,console.error("[SKMT] Error sending message:",t),alert("Failed to open visualizers: "+t.message)}})),document.getElementById("resetStatsBtn").addEventListener("click",(function(){if(!m)return;const e=[],t="all"===h?["normal","special","custom"]:[h];if(confirm(`Are you sure you want to reset all stats and match history for ${"all"===h?"all modes":"this mode"} and SKID?`)){t.forEach((t=>{e.push(y("matchHistory",m,t)),e.push(y("gamesJoined",m,t)),e.push(y("gamesStarted",m,t)),e.push(y("gamesQuit",m,t)),e.push(y("matchesCompleted",m,t))}));const a={};e.forEach((e=>a[e]=e.includes("matchHistory")?[]:0)),chrome.storage.sync.set(a,(()=>{console.log("[SKMT][RESET] Stats reset for",t,"mode(s)."),k()}))}})),S(),k(),chrome.storage.local.get(["openSections"],(e=>{e.openSections&&(g=e.openSections,Object.entries(g).forEach((([e,t])=>{const a=document.querySelector(`.stats-details:has(#${e})`);a&&(t?a.setAttribute("open",""):a.removeAttribute("open"))})))}));const s=document.getElementById("moreDetailsBtn");s&&s.addEventListener("click",(()=>{chrome.tabs.create({url:"match-history.html"})})),chrome.storage.local.get(["pendingMatches"],(e=>{const t=e.pendingMatches||[];t.length>0&&(console.log(`[SKMT] Processing ${t.length} pending matches`),t.forEach((e=>{chrome.runtime.sendMessage({type:"matchComplete",data:e}).catch((()=>{console.log("[SKMT] Popup: Failed to process pending match")}))})),chrome.storage.local.set({pendingMatches:[]}))}))})),chrome.storage.onChanged.addListener(((e,t)=>{"sync"===t&&(e[`favoriteMatches_${m||"Default"}`]?(console.log("[SKMT][POPUP] Favorite matches changed in storage, reloading stats."),k()):m&&Object.keys(e).some((e=>e.includes(`_${m}_`)))&&k())}));const E=1e3;async function f(e,t){return new Promise((a=>{chrome.storage.sync.get([y("matchHistory",m,e)],(s=>{const n=s[y("matchHistory",m,e)]||[],o=n[n.length-1],l=o&&o.matchEndTime===t.matchEndTime&&o.kills===t.kills&&o.deaths===t.deaths;a(l)}))}))}async function v(){console.log("[SKMT][POPUP] Forcing stats refresh"),await k()}async function M(e,t=0){return new Promise(((a,s)=>{const n=setTimeout((()=>{t<3?(console.log(`[SKMT][POPUP] Message port timeout, retrying (${t+1}/3)...`),setTimeout((()=>{M(e,t+1).then(a).catch(s)}),1e3)):s(new Error("Message port timeout after all retries"))}),5e3);chrome.runtime.sendMessage(e,(o=>{clearTimeout(n),chrome.runtime.lastError?(console.error("[SKMT][POPUP] Message port error:",chrome.runtime.lastError),t<3?(console.log(`[SKMT][POPUP] Retrying message (${t+1}/3)...`),setTimeout((()=>{M(e,t+1).then(a).catch(s)}),1e3)):s(chrome.runtime.lastError)):a(o)}))}))}chrome.runtime.onMessage.addListener((function(e,t,a){if("SKMT_SKID_UPDATED"===e.type)return k(),a({success:!0}),!0;if("SKMT_MATCH_COMPLETE"===e.type){console.log("[SKMT][POPUP] Received MATCH_COMPLETE message:",e.data);const t=e.data,a=t.isSpecialMode?"special":t.isCustomMode?"custom":"normal",s=m||"Default",n=y("gamesQuit",s,a);if(t.quit){const e=t.matchEndTime-t.matchStartTime;if(e>=1e4){let e=0;const s=async()=>{try{let o=(await new Promise((e=>{chrome.storage.sync.get([n],e)})))[n]||0;o++;const l={};l[n]=o,await new Promise((e=>{chrome.storage.sync.set(l,e)}));const i=await f(a,t);if(!i&&e<3)return e++,console.log(`[SKMT][POPUP] Retry ${e} for quit stats update`),void setTimeout(s,E);i?k():(console.log("[SKMT][POPUP] Stats update verification failed, forcing refresh"),await v());try{await M({success:!0})}catch(e){console.error("[SKMT][POPUP] Error sending response:",e)}}catch(t){if(console.error("[SKMT][POPUP] Error updating quit stats:",t),e<3)e++,setTimeout(s,E);else{await v();try{await M({success:!1,error:t.message})}catch(e){console.error("[SKMT][POPUP] Error sending error response:",e)}}}};s()}else{console.log("[SKMT][POPUP] Not incrementing gamesQuit - time spent less than 10 seconds:",e),k();try{M({success:!0})}catch(e){console.error("[SKMT][POPUP] Error sending response:",e)}}}else{let e=0;const n=async()=>{try{const o=y("matchHistory",s,a),l=y("gamesJoined",s,a),i=y("gamesStarted",s,a),c=y("matchesCompleted",s,a),r=await new Promise((e=>{chrome.storage.sync.get([o,l,i,c],e)}));let d=r[o]||[];d.push(t);let m=r[l]||0,h=r[i]||0,u=r[c]||0;t.joined&&m++,t.started&&h++,u++;const g={[o]:d,[l]:m,[i]:h,[c]:u};await new Promise((e=>{chrome.storage.sync.set(g,e)}));const p=await f(a,t);if(!p&&e<3)return e++,console.log(`[SKMT][POPUP] Retry ${e} for match stats update`),void setTimeout(n,E);p?k():(console.log("[SKMT][POPUP] Stats update verification failed, forcing refresh"),await v());try{await M({success:!0})}catch(e){console.error("[SKMT][POPUP] Error sending response:",e)}}catch(t){if(console.error("[SKMT][POPUP] Error updating match stats:",t),e<3)e++,setTimeout(n,E);else{await v();try{await M({success:!1,error:t.message})}catch(e){console.error("[SKMT][POPUP] Error sending error response:",e)}}}};n()}return!0}if("SKMT_DEATHS_UPDATE"===e.type){document.getElementById("deaths").textContent=e.deaths;const t=parseInt(document.getElementById("kills").textContent)||0;return document.getElementById("kdr").textContent=r(t,e.deaths),a({success:!0}),!0}return"SKMT_KILLSTREAK_UPDATE"===e.type?(document.getElementById("killStreak").textContent=e.killStreak,a({success:!0}),!0):void 0}));const T="1.4";let b=null;async function B(){return b||(b=await async function(){const e=(new TextEncoder).encode("SKMT_SECURE_SALT_v1.4"),t=await crypto.subtle.digest("SHA-256",e);return await crypto.subtle.importKey("raw",t,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}()),b}async function I(){try{const e=["normal","special","custom"],t=["currentSkid"];e.forEach((e=>{t.push(y("matchHistory",m,e)),t.push(y("gamesJoined",m,e)),t.push(y("gamesStarted",m,e)),t.push(y("gamesQuit",m,e)),t.push(y("matchesCompleted",m,e))}));const a=await new Promise((e=>{chrome.storage.sync.get(t,e)})),s=await new Promise((e=>{chrome.storage.local.get(["openSections"],e)})),n={};e.forEach((e=>{const t=a[y("matchHistory",m,e)]||[];let s=0,o=0,l=0,i=0,c=0,r=0,d=0,h=0,u=0,g=0,p=0,S=0,k=0,E=0,f=0,v=0,M=0,T=0;t.forEach((e=>{e.kills>=3&&s++,e.kills>=5&&o++,e.kills>=7&&l++,e.kills>=10&&i++,e.kills>=15&&c++,e.kills>=20&&r++,e.kills>=25&&d++,e.kills>=30&&h++,e.kills>f&&(f=e.kills),e.deaths>v&&(v=e.deaths);const t=e.deaths>0?e.kills/e.deaths:e.kills;if(t>T&&(T=t),e.killTimestamps&&e.killTimestamps.length>0){let t=0,a=0;const s=[];e.killTimestamps&&e.killTimestamps.forEach((e=>s.push({type:"kill",time:e}))),e.deathTimestamps&&e.deathTimestamps.forEach((e=>s.push({type:"death",time:e}))),s.sort(((e,t)=>e.time-t.time)),s.forEach((e=>{"death"===e.type?(t>a&&(a=t),t=0):"kill"===e.type&&(t++,t>a&&(a=t))})),a>M&&(M=a)}if(e.killTimestamps&&e.killTimestamps.length>0){let t=0,a=e.killTimestamps[0];for(let s=1;s<e.killTimestamps.length;s++){const n=e.killTimestamps[s];n-a<=4e3?(t++,2===t&&u++,3===t&&g++,4===t&&p++,5===t&&S++,6===t&&k++,7===t&&E++):t=1,a=n}}})),n[e]={smashStreak:s,smashtacularStreak:o,smashosaurusStreak:l,smashlvaniaStreak:i,monsterSmashStreak:c,potatoStreak:r,smashSmashStreak:d,potoatachioStreak:h,doubleSmash:u,multiSmash:g,multiMegaSmash:p,multiMegaUltraSmash:S,gooseySmash:k,crazyMultiMegaUltraSmash:E,highestKillsRecord:f,highestDeathsRecord:v,highestKillStreakRecord:M,highestKDRRecord:T}})),a.stats=n,a.uiState={currentMode:h,openSections:s.openSections||{},skid:m};const o={version:T,timestamp:Date.now(),skid:m,data:a},l=await async function(e){try{await B();const t=crypto.getRandomValues(new Uint8Array(12)),a=(new TextEncoder).encode(JSON.stringify(e)),s=await crypto.subtle.encrypt({name:"AES-GCM",iv:t},b,a),n=new Uint8Array(t.length+s.byteLength);n.set(t),n.set(new Uint8Array(s),t.length);const o=btoa(String.fromCharCode.apply(null,n));return`SKMT_ENCRYPTED_v${T}_${o}`}catch(e){throw console.error("Encryption error:",e),new Error("Failed to encrypt data")}}(o),i=new Blob([l],{type:"application/octet-stream"}),c=URL.createObjectURL(i),r=document.createElement("a");r.href=c,r.download=`smash_karts_stats_${m}_${(new Date).toISOString().split("T")[0]}.skmt`,document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(c)}catch(e){console.error("Error exporting stats:",e),alert("Failed to export stats. Please try again.")}}document.getElementById("closeMatchInfoModal")&&(document.getElementById("closeMatchInfoModal").onclick=function(){document.getElementById("matchInfoModal").style.display="none"}),document.getElementById("matchInfoModal")&&(document.getElementById("matchInfoModal").onclick=function(e){e.target===this&&(this.style.display="none")});let C=null;function x(){const e=document.getElementById("hudSettingsModal"),t=document.getElementById("hudSettingsTitle");let a="";switch(C){case"deaths":a="Deaths";break;case"killstreak":a="Kill Streak";break;case"kdr":a="KDR";break;case"matchcode":a="Custom Match Code"}t.textContent=`${a} HUD Settings`;const s=`${C}HudSettings`;chrome.storage.sync.get([s],(e=>{const t=e[s]||{fontSize:32,fontColor:"#ffffff",fontFamily:"Arial, sans-serif",backgroundColor:"rgba(0, 0, 0, 0.5)"};document.getElementById("hudFontSize").value=t.fontSize,document.getElementById("fontSizeValue").textContent=`${t.fontSize}px`,document.getElementById("hudFontColor").value=t.fontColor,document.getElementById("hudFontFamily").value=t.fontFamily,document.getElementById("hudBackgroundColor").value=t.backgroundColor?function(e){const t=e.substring(e.indexOf("(")+1,e.indexOf(")")).split(",");return`#${((1<<24)+(parseInt(t[0].trim())<<16)+(parseInt(t[1].trim())<<8)+parseInt(t[2].trim())).toString(16).slice(1).toUpperCase()}`}(t.backgroundColor):"#000000"})),e.style.display="flex"}function w(){const e={fontSize:document.getElementById("hudFontSize").value,fontColor:document.getElementById("hudFontColor").value,fontFamily:document.getElementById("hudFontFamily").value,backgroundColor:L(document.getElementById("hudBackgroundColor").value,.5)},t=`${C}HudSettings`;chrome.storage.sync.set({[t]:e}),chrome.tabs.query({active:!0,currentWindow:!0},(t=>{let a;switch(C){case"deaths":a="update-deaths-hud-style";break;case"killstreak":a="update-killstreak-hud-style";break;case"kdr":a="update-kdr-hud-style";break;case"matchcode":a="update-matchcode-hud-style"}chrome.tabs.sendMessage(t[0].id,{type:a,settings:e})}))}function L(e,t){const a=parseInt(e.slice(1),16);return`rgba(${a>>16&255}, ${a>>8&255}, ${255&a}, ${t})`}document.getElementById("deathsHudSettings").addEventListener("click",(()=>{C="deaths",x()})),document.getElementById("killStreakHudSettings").addEventListener("click",(()=>{C="killstreak",x()})),document.getElementById("kdrHudSettings").addEventListener("click",(()=>{C="kdr",x()})),document.getElementById("matchCodeHudSettings").addEventListener("click",(()=>{C="matchcode",x()})),document.getElementById("closeHudSettingsModal").addEventListener("click",(()=>{document.getElementById("hudSettingsModal").style.display="none"})),document.getElementById("hudSettingsModal").addEventListener("click",(e=>{e.target===document.getElementById("hudSettingsModal")&&(document.getElementById("hudSettingsModal").style.display="none")})),document.getElementById("hudFontSize").addEventListener("input",(e=>{const t=e.target.value;document.getElementById("fontSizeValue").textContent=`${t}px`,w()})),document.getElementById("hudFontColor").addEventListener("change",w),document.getElementById("hudFontFamily").addEventListener("change",w),document.getElementById("hudBackgroundColor").addEventListener("input",w);let P={};document.getElementById("matchSortSelect")&&document.getElementById("matchSortSelect").addEventListener("change",(function(e){k()}))})();