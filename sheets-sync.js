(()=>{const e="1DjhyyKWT5fAAG2bN2i2dW5iv6DCdulOZZHcoovSnelg";window.sheetsSync={saveStats:async function(t,s){try{if(console.log("[SKMT][SYNC] Starting sync for SKID:",t,"Stats:",s),!t||"Default"===t)throw new Error("Invalid SKID: "+t);if(!s||"object"!=typeof s)throw new Error("Invalid stats object: "+JSON.stringify(s));console.log("[SKMT][SYNC] Attempting to read sheet...");const o=await gapi.client.sheets.spreadsheets.values.get({spreadsheetId:e,range:"Stats!A:E"});if(!o.result)throw console.error("[SKMT][SYNC] Error reading sheet:",o),new Error("Failed to read sheet");const r=o.result;console.log("[SKMT][SYNC] Sheet data read successfully:",r);const n=r.values?r.values.findIndex((e=>e[0]===t)):-1;console.log("[SKMT][SYNC] Row index for SKID:",n);let a=0;if("string"==typeof s.totalTimeSpent){console.log("[SKMT][SYNC] Converting time string:",s.totalTimeSpent);const e=s.totalTimeSpent.match(/(?:(\d+)h)?\s*(?:(\d+)m)?\s*(?:(\d+)s)?/);if(e){const t=parseInt(e[1]||0);a=3600*t+60*parseInt(e[2]||0)+parseInt(e[3]||0),console.log("[SKMT][SYNC] Converted time to seconds:",a)}}else a=s.totalTimeSpent||0;const l=[t,s.kills||0,s.deaths||0,s.totalGames||0,a];if(console.log("[SKMT][SYNC] Prepared values:",l),-1===n){console.log("[SKMT][SYNC] Adding new row for SKID:",t);const s=await gapi.client.sheets.spreadsheets.values.append({spreadsheetId:e,range:"Stats!A:E",valueInputOption:"RAW",resource:{values:[l]}});if(!s.result)throw console.error("[SKMT][SYNC] Error appending row:",s),new Error("Failed to append row");console.log("[SKMT][SYNC] Successfully appended new row")}else{console.log("[SKMT][SYNC] Updating row for SKID:",t,"at index:",n);const s=await gapi.client.sheets.spreadsheets.values.update({spreadsheetId:e,range:`Stats!A${n+1}:E${n+1}`,valueInputOption:"RAW",resource:{values:[l]}});if(!s.result)throw console.error("[SKMT][SYNC] Error updating row:",s),new Error("Failed to update row");console.log("[SKMT][SYNC] Successfully updated existing row")}return console.log("[SKMT][SYNC] Sync completed successfully"),!0}catch(e){return console.error("[SKMT][SYNC] Error in saveStatsToSheets:",e),!1}},loadStats:async function(t){try{console.log("[SKMT][SYNC] Loading stats for SKID:",t);const s=await gapi.client.sheets.spreadsheets.values.get({spreadsheetId:e,range:"Stats!A:E"});if(!s.result||!s.result.values)return console.error("[SKMT][SYNC] No data found in sheet"),null;const o=s.result.values.findIndex((e=>e[0]===t));if(-1===o)return console.log("[SKMT][SYNC] No stats found for SKID:",t),null;const r=s.result.values[o];console.log("[SKMT][SYNC] Found stats row:",r);const n=r[3]||"0s";let a=0;const l=n.match(/(\d+)h/);l&&(a+=3600*parseInt(l[1]));const c=n.match(/(\d+)m/);c&&(a+=60*parseInt(c[1]));const S=n.match(/(\d+)s/);return S&&(a+=parseInt(S[1])),{kills:parseInt(r[1])||0,deaths:parseInt(r[2])||0,totalTimeSpent:a,totalGames:parseInt(r[4])||0}}catch(e){return console.error("[SKMT][SYNC] Error loading stats:",e),null}}}})();