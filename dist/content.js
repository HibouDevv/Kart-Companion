(()=>{let e={startTime:null,endTime:null,map:null,playerStats:{kills:0,deaths:0,powerUpsCollected:0,powerUpsUsed:0,smashStreaks:[],timeJoined:null,timeSpent:0},otherPlayers:new Map};function t(){const e=document.querySelector("[data-player-info]");return e?{skid:e.dataset.skid,username:e.dataset.username}:null}(function(){const a=window.WebSocket;window.WebSocket=function(s,o){const r=new a(s,o);return r.addEventListener("message",(function(a){try{!function(a){if(a)switch(a.type){case"gameStart":!function(a){e={startTime:Date.now(),endTime:null,map:a.map,playerStats:{kills:0,deaths:0,powerUpsCollected:0,powerUpsUsed:0,smashStreaks:[],timeJoined:Date.now(),timeSpent:0},otherPlayers:new Map};const s=t();s&&(e.playerStats.skid=s.skid,e.playerStats.username=s.username)}(a);break;case"gameEnd":!function(){e.endTime=Date.now(),e.playerStats.timeSpent=e.endTime-e.playerStats.timeJoined;const t={...e,otherPlayers:Array.from(e.otherPlayers.values())};chrome.runtime.sendMessage({type:"matchComplete",data:t})}();break;case"playerKill":!function(t){if(t.killerId===e.playerStats.skid&&e.playerStats.kills++,e.otherPlayers.has(t.victimId)){const a=e.otherPlayers.get(t.victimId);a.deaths++,e.otherPlayers.set(t.victimId,a)}}(a);break;case"playerDeath":!function(t){t.victimId===e.playerStats.skid&&e.playerStats.deaths++}(a);break;case"powerUpCollected":!function(t){t.playerId===e.playerStats.skid&&e.playerStats.powerUpsCollected++}(a);break;case"powerUpUsed":!function(t){t.playerId===e.playerStats.skid&&e.playerStats.powerUpsUsed++}(a);break;case"smashStreak":!function(t){t.playerId===e.playerStats.skid&&e.playerStats.smashStreaks.push({type:t.streakType,timestamp:Date.now()})}(a)}}(JSON.parse(a.data))}catch(e){console.error("Error processing WebSocket message:",e)}})),r}})(),new MutationObserver((a=>{a.forEach((a=>{if("childList"===a.type){const a=t();a&&(e.playerStats.skid=a.skid,e.playerStats.username=a.username)}}))})).observe(document.body,{childList:!0,subtree:!0}),console.log("[SKMT] Content script loaded"),function(){const e=document.createElement("script");e.src=chrome.runtime.getURL("injected.js"),e.onload=function(){this.remove()},(document.head||document.documentElement).appendChild(e)}(),window.addEventListener("message",(function(e){if(e.source===window&&e.data&&e.data.type&&e.data.type.startsWith("SKMT_"))if(console.log("[SKMT][CONTENT] Received message from injected script:",e.data.type,e.data),"SKMT_SKID_UPDATED"===e.data.type){const t=e.data.skid;t&&"string"==typeof t&&t.length>5&&window.chrome&&chrome.storage&&chrome.storage.sync&&chrome.storage.sync.set({currentSkid:t},(()=>{console.log("[SKMT][CONTENT] SKID saved to chrome.storage.sync:",t),chrome.runtime.sendMessage(e.data)}))}else if("SKMT_MATCH_COMPLETE"===e.data.type){const t=e.data.data;chrome.storage.sync.get(["currentSkid"],(a=>{const s=a.currentSkid||"default";let o="normal";t.isCustomMode?o="custom":t.isSpecialMode&&(o="special");const r=e=>`${e}_${s}_${o}`;if(t.quit){console.log("[SKMT][CONTENT][SAVE] Match was quit. Only updating gamesQuit stat for mode:",o,"Match:",t);const a=r("gamesQuit");chrome.storage.sync.get([a],(t=>{let s=t[a]||0;s++;const o={};o[a]=s,console.log("[SKMT][CONTENT][SAVE] Setting updated gamesQuit in chrome.storage.sync:",o),chrome.storage.sync.set(o,(()=>{chrome.runtime.sendMessage(e.data)}))}))}else{console.log("[SKMT][CONTENT][SAVE] Saving completed match for SKID:",s,"Mode:",o,"isSpecialMode:",t.isSpecialMode,"isCustomMode:",t.isCustomMode,"Match:",t),t.matchStartTime&&t.matchEndTime?(t.playerStats=t.playerStats||{},t.playerStats.timeSpent=t.matchEndTime-t.matchStartTime):(t.playerStats=t.playerStats||{},t.playerStats.timeSpent=0);const a=[r("matchHistory"),r("gamesJoined"),r("gamesStarted"),r("gamesQuit"),r("matchesCompleted")];chrome.storage.sync.get(a,(a=>{const s=a[r("matchHistory")]||[];s.push(t);let o=a[r("gamesJoined")]||0,n=a[r("gamesStarted")]||0,c=a[r("gamesQuit")]||0,i=a[r("matchesCompleted")]||0;t.joined&&o++,t.started&&n++,t.quit||i++;const d={};d[r("matchHistory")]=s,d[r("gamesJoined")]=o,d[r("gamesStarted")]=n,d[r("gamesQuit")]=c,d[r("matchesCompleted")]=i,console.log("[SKMT][CONTENT][SAVE] Setting completed match data and updated stats in chrome.storage.sync:",d),chrome.storage.sync.set(d,(()=>{chrome.runtime.sendMessage(e.data)}))}))}}))}}))})();