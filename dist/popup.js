(()=>{document.getElementById("kills"),document.getElementById("deaths"),document.getElementById("matches"),document.getElementById("matches-list");const e=document.getElementById("statsBtn"),t=document.getElementById("hudBtn"),a=document.getElementById("statsSection"),s=document.getElementById("hudSection");a.classList.add("active"),e.addEventListener("click",(()=>{e.classList.add("selected"),t.classList.remove("selected"),a.style.display="block",s.style.display="none"})),t.addEventListener("click",(()=>{t.classList.add("selected"),e.classList.remove("selected"),a.style.display="none",s.style.display="block"}));const n=document.getElementById("toggleDeathsHud"),o=document.getElementById("toggleKillStreakHud");function l(e){return e?new Date(e).toLocaleString(void 0,{hour:"2-digit",minute:"2-digit",second:"2-digit",year:"2-digit",month:"2-digit",day:"2-digit"}):"-"}function i(e,t){return 0===t?e>0?e.toFixed(2):"0.00":(e/t).toFixed(2)}function c(e){const t=Math.floor(e/1e3),a=Math.floor(t/3600),s=Math.floor(t%3600/60),n=t%60;return a>0?`${a}h ${s}m ${n}s`:s>0?`${s}m ${n}s`:`${n}s`}n.addEventListener("change",(function(){const e=this.checked;chrome.storage.sync.set({deathsHudEnabled:e}),chrome.tabs.query({active:!0,currentWindow:!0},(t=>{chrome.tabs.sendMessage(t[0].id,{type:"toggle-deaths-hud",enabled:e})}))})),o.addEventListener("change",(function(){const e=this.checked;chrome.storage.sync.set({killStreakHudEnabled:e}),chrome.tabs.query({active:!0,currentWindow:!0},(t=>{chrome.tabs.sendMessage(t[0].id,{type:"toggle-killstreak-hud",enabled:e})}))})),chrome.storage.sync.get(["deathsHudEnabled","killStreakHudEnabled"],(e=>{n.checked=!1!==e.deathsHudEnabled,o.checked=!1!==e.killStreakHudEnabled,chrome.tabs.query({active:!0,currentWindow:!0},(e=>{chrome.tabs.sendMessage(e[0].id,{type:"toggle-deaths-hud",enabled:n.checked}),chrome.tabs.sendMessage(e[0].id,{type:"toggle-killstreak-hud",enabled:o.checked})}))}));let m=null,r="normal",d={primaryStats:!1,secondaryStats:!1,averageStats:!1,streaks:!1,quickKills:!1};function h(e,t,a){const s=a||r;return"all"===s?null:`${e}_${t}_${s}`}function u(){document.getElementById("normalModeBtn").classList.toggle("selected","normal"===r),document.getElementById("specialModeBtn").classList.toggle("selected","special"===r),document.getElementById("customModeBtn").classList.toggle("selected","custom"===r),document.getElementById("allStatsBtn").classList.toggle("selected","all"===r),document.getElementById("primaryStatsHeader").textContent="all"===r?"All Modes Primary Stats":"Primary Stats",document.getElementById("secondaryStatsHeader").textContent="all"===r?"All Modes Secondary Stats":"Secondary Stats"}function p(){chrome.storage.sync.get(["currentSkid"],(e=>{m=e.currentSkid||"Default",document.getElementById("skidValue").textContent=m;const t=["currentSkid"];"all"===r?["normal","special","custom"].forEach((e=>{t.push(h("matchHistory",m,e)),t.push(h("gamesJoined",m,e)),t.push(h("gamesStarted",m,e)),t.push(h("gamesQuit",m,e)),t.push(h("matchesCompleted",m,e))})):(t.push(h("matchHistory",m,r)),t.push(h("gamesJoined",m,r)),t.push(h("gamesStarted",m,r)),t.push(h("gamesQuit",m,r)),t.push(h("matchesCompleted",m,r))),console.log("[SKMT][LOAD] Loading stats for SKID:",m,"Mode:",r,"Keys:",t),chrome.storage.sync.get(t,(e=>{console.log("[SKMT][LOAD] Data returned from chrome.storage.sync:",e),document.querySelector(".match-history").style.display="block",function(e,t){const a=e[h("matchHistory",m,t)]||[];let s=0,n=0,o=0,r=0,d=0,u=0,p=0,y=0,S=0,E=0,k=0,v=0,M=0,b=0,T=0,C=0,B=0,I=0,w=0,x=0,$=0;if("all"===t){const t=["normal","special","custom"],a={};t.forEach((t=>{const s=e[h("matchHistory",m,t)]||[];let n=0,o=0,l=0,i=e[h("gamesJoined",m,t)]||0,c=e[h("gamesStarted",m,t)]||0,r=e[h("gamesQuit",m,t)]||0,d=e[h("matchesCompleted",m,t)]||0,u=0,p=0,g=0,y=0,S=0,E=0,k=0,f=0,v=0,M=0,b=0,T=0,C=0,B=0;s.forEach((e=>{n+=e.kills||0,o+=e.deaths||0,l+=e.duration||(e.matchEndTime&&e.matchStartTime?e.matchEndTime-e.matchStartTime:0)})),s.forEach((e=>{let t=0,a=null,s=0,n={};const o=[];e.killTimestamps&&e.killTimestamps.forEach((e=>o.push({type:"kill",time:e}))),e.deathTimestamps&&e.deathTimestamps.forEach((e=>o.push({type:"death",time:e}))),o.sort(((e,t)=>e.time-t.time)),o.forEach((e=>{"death"===e.type?(t=0,n={}):"kill"===e.type&&(t++,t>=3&&!n[3]&&(u++,n[3]=!0),t>=5&&!n[5]&&(p++,n[5]=!0),t>=7&&!n[7]&&(g++,n[7]=!0),t>=10&&!n[10]&&(y++,n[10]=!0),t>=15&&!n[15]&&(S++,n[15]=!0),t>=20&&!n[20]&&(E++,n[20]=!0),t>=25&&!n[25]&&(k++,n[25]=!0),t>=30&&!n[30]&&(f++,n[30]=!0),a&&e.time-a<=3e3?(s++,2===s&&v++,3===s&&M++,4===s&&b++,5===s&&T++,6===s&&C++,7===s&&B++):s=1,a=e.time)}))})),a[t]={kills:n,deaths:o,timeSpent:l,gamesJoined:i,gamesStarted:c,gamesQuit:r,matchesCompleted:d,smashStreak:u,smashtacularStreak:p,smashosaurusStreak:g,smashlvaniaStreak:y,monsterSmashStreak:S,potatoStreak:E,smashSmashStreak:k,potoatachioStreak:f,doubleSmash:v,multiSmash:M,multiMegaSmash:b,multiMegaUltraSmash:T,gooseySmash:C,crazyMultiMegaUltraSmash:B}})),t.forEach((e=>{const t=a[e];s+=t.kills,n+=t.deaths,o+=t.timeSpent,r+=t.gamesJoined,d+=t.gamesStarted,u+=t.gamesQuit,p+=t.matchesCompleted,y+=t.smashStreak,S+=t.smashtacularStreak,E+=t.smashosaurusStreak,k+=t.smashlvaniaStreak,v+=t.monsterSmashStreak,M+=t.potatoStreak,b+=t.smashSmashStreak,T+=t.potoatachioStreak,C+=t.doubleSmash,B+=t.multiSmash,I+=t.multiMegaSmash,w+=t.multiMegaUltraSmash,x+=t.gooseySmash,$+=t.crazyMultiMegaUltraSmash}))}else a.forEach((e=>{s+=e.kills||0,n+=e.deaths||0,o+=e.duration||(e.matchEndTime&&e.matchStartTime?e.matchEndTime-e.matchStartTime:0)})),r=e[h("gamesJoined",m,t)]||0,d=e[h("gamesStarted",m,t)]||0,u=e[h("gamesQuit",m,t)]||0,p=e[h("matchesCompleted",m,t)]||0,a.forEach((e=>{let t=0,a=null,s=0,n={};const o=[];e.killTimestamps&&e.killTimestamps.forEach((e=>o.push({type:"kill",time:e}))),e.deathTimestamps&&e.deathTimestamps.forEach((e=>o.push({type:"death",time:e}))),o.sort(((e,t)=>e.time-t.time)),o.forEach((e=>{"death"===e.type?(t=0,n={}):"kill"===e.type&&(t++,t>=3&&!n[3]&&(y++,n[3]=!0),t>=5&&!n[5]&&(S++,n[5]=!0),t>=7&&!n[7]&&(E++,n[7]=!0),t>=10&&!n[10]&&(k++,n[10]=!0),t>=15&&!n[15]&&(v++,n[15]=!0),t>=20&&!n[20]&&(M++,n[20]=!0),t>=25&&!n[25]&&(b++,n[25]=!0),t>=30&&!n[30]&&(T++,n[30]=!0),a&&e.time-a<=3e3?(s++,2===s&&C++,3===s&&B++,4===s&&I++,5===s&&w++,6===s&&x++,7===s&&$++):s=1,a=e.time)}))}));document.getElementById("smashStreak").textContent=y,document.getElementById("smashtacularStreak").textContent=S,document.getElementById("smashosaurusStreak").textContent=E,document.getElementById("smashlvaniaStreak").textContent=k,document.getElementById("monsterSmashStreak").textContent=v,document.getElementById("potatoStreak").textContent=M,document.getElementById("smashSmashStreak").textContent=b,document.getElementById("potoatachioStreak").textContent=T,document.getElementById("doubleSmash").textContent=C,document.getElementById("multiSmash").textContent=B,document.getElementById("multiMegaSmash").textContent=I,document.getElementById("multiMegaUltraSmash").textContent=w,document.getElementById("gooseySmash").textContent=x,document.getElementById("crazyMultiMegaUltraSmash").textContent=$,document.getElementById("streaksHeader").textContent="all"===t?"All Modes Streaks (Without Dying)":"Streaks (Without Dying)",document.getElementById("quickKillsHeader").textContent="all"===t?"All Modes Streaks (Quick Kills)":"Streaks (Quick Kills)";const L=(p||0)+(u||0);document.getElementById("killsLabel").textContent="all"===t?"Total Kills":"Kills",document.getElementById("deathsLabel").textContent="all"===t?"Total Deaths":"Deaths",document.getElementById("kdrLabel").textContent="all"===t?"Overall KDR":"KDR",document.getElementById("matchesCompletedLabel").textContent="all"===t?"Total Matches Completed":"Matches Completed",document.getElementById("totalTimeSpentLabel").textContent="all"===t?"Total Time Played":"Time Played",document.getElementById("gamesJoinedLabel").textContent="all"===t?"Total Matches Joined":"Matches Joined",document.getElementById("totalMatchesLabel").textContent="Total Matches (Completed + Quit)",console.log("[SKMT][POPUP][DISPLAY] Updating gamesQuit display. Value:",u,"Element:",document.getElementById("gamesQuit")),document.getElementById("kills").textContent=s,document.getElementById("deaths").textContent=n,document.getElementById("kdr").textContent=i(s,n),document.getElementById("totalTimeSpent").textContent=c(o),document.getElementById("gamesJoined").textContent=r,document.getElementById("gamesStarted").textContent=d,document.getElementById("gamesQuit").textContent=u,document.getElementById("matchesCompleted").textContent=p,document.getElementById("totalMatches").textContent=L;const H=L,D=H>0?(p||0)/H*100:0,K=H>0?(u||0)/H*100:0;document.getElementById("matchesCompletedRate").textContent=`${D.toFixed(2)}%`,document.getElementById("matchesQuitRate").textContent=`${K.toFixed(2)}%`;const A=H>0?s/H:0,P=H>0?n/H:0,U=H>0?o/H:0;document.getElementById("avgKills").textContent=A.toFixed(2),document.getElementById("avgDeaths").textContent=P.toFixed(2),document.getElementById("avgTimeSpent").textContent=c(U),document.getElementById("averageStatsHeader").textContent="all"===t?"All Modes Average Stats":"Average Stats";const Q=document.getElementById("matches-list");if(Q.innerHTML="","all"===t){const t=[];["normal","special","custom"].forEach((a=>{(e[h("matchHistory",m,a)]||[]).forEach((e=>{t.push({...e,mode:a})}))})),t.sort(((e,t)=>{const a=e.matchStartTime||e.startTime||0;return(t.matchStartTime||t.startTime||0)-a})),t.forEach(((e,a)=>{const s=document.createElement("div");s.className="match-card";const n=document.createElement("div");n.className="match-card-content";const o=document.createElement("div");o.className="match-meta",o.textContent=`#${t.length-a} | ${l(e.matchStartTime)} - ${l(e.matchEndTime)}`,n.appendChild(o);const c=document.createElement("div");c.className="match-stats",c.innerHTML="",c.innerHTML+=`<span>Kills:</span><b>${e.kills}</b>`,c.innerHTML+=`<span>Deaths:</span><b>${e.deaths}</b>`,c.innerHTML+=`<span>KDR:</span><b>${i(e.kills,e.deaths)}</b>`;const m=e.duration||(e.matchEndTime&&e.matchStartTime?e.matchEndTime-e.matchStartTime:0),r=Math.floor(m/36e5),d=Math.floor(m%36e5/6e4),h=Math.floor(m%6e4/1e3);let u;u=r>0?`${r}h ${d}m ${h}s`:`${d}m ${h}s`,c.innerHTML+=`<span>Duration:</span><b>${u}</b>`,n.appendChild(c);const p=document.createElement("div");p.className="match-flags";let y=[];e.joined&&y.push("Joined"),e.started&&y.push("Started"),e.quit?y.push("Quit"):y.push("Completed"),e.isSpecialMode&&y.push("Special Mode"),e.isCustomMode&&y.push("Custom Match"),y.push(`${e.mode.charAt(0).toUpperCase()+e.mode.slice(1)} Mode`),y.length>0&&(p.textContent=y.join(" | ")),n.appendChild(p);const S=document.createElement("button");S.className="info-btn",S.title="View match information",S.innerHTML='<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="10" cy="10" r="9" stroke="#3498db" stroke-width="2" fill="white"/><rect x="9" y="8" width="2" height="6" rx="1" fill="#3498db"/><rect x="9" y="5" width="2" height="2" rx="1" fill="#3498db"/></svg>',S.onclick=()=>f(e);const E=document.createElement("button");E.className="trash-btn",E.title="Delete this match",E.innerHTML='<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6 8V15M10 8V15M14 8V15M3 5H17M8 5V3H12V5M5 5V17C5 17.5523 5.44772 18 6 18H14C14.5523 18 15 17.5523 15 17V5" stroke="#e74c3c" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>',E.onclick=()=>g(t.length-1-a,e.mode),s.appendChild(n),s.appendChild(S),s.appendChild(E),Q.appendChild(s)}))}else a.slice().reverse().forEach(((e,t)=>{const s=document.createElement("div");s.className="match-card";const n=document.createElement("div");n.className="match-card-content";const o=document.createElement("div");o.className="match-meta",o.textContent=`#${a.length-t} | ${l(e.matchStartTime)} - ${l(e.matchEndTime)}`,n.appendChild(o);const c=document.createElement("div");c.className="match-stats",c.innerHTML="",c.innerHTML+=`<span>Kills:</span><b>${e.kills}</b>`,c.innerHTML+=`<span>Deaths:</span><b>${e.deaths}</b>`,c.innerHTML+=`<span>KDR:</span><b>${i(e.kills,e.deaths)}</b>`;const m=e.duration||(e.matchEndTime&&e.matchStartTime?e.matchEndTime-e.matchStartTime:0),r=Math.floor(m/36e5),d=Math.floor(m%36e5/6e4),h=Math.floor(m%6e4/1e3);let u;u=r>0?`${r}h ${d}m ${h}s`:`${d}m ${h}s`,c.innerHTML+=`<span>Duration:</span><b>${u}</b>`,n.appendChild(c);const p=document.createElement("div");p.className="match-flags";let y=[];e.joined&&y.push("Joined"),e.started&&y.push("Started"),e.quit?y.push("Quit"):y.push("Completed"),e.isSpecialMode&&y.push("Special Mode"),e.isCustomMode&&y.push("Custom Match"),y.length>0&&(p.textContent=y.join(" | ")),n.appendChild(p);const S=document.createElement("button");S.className="info-btn",S.title="View match information",S.innerHTML='<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="10" cy="10" r="9" stroke="#3498db" stroke-width="2" fill="white"/><rect x="9" y="8" width="2" height="6" rx="1" fill="#3498db"/><rect x="9" y="5" width="2" height="2" rx="1" fill="#3498db"/></svg>',S.onclick=()=>f(e);const E=document.createElement("button");E.className="trash-btn",E.title="Delete this match",E.innerHTML='<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6 8V15M10 8V15M14 8V15M3 5H17M8 5V3H12V5M5 5V17C5 17.5523 5.44772 18 6 18H14C14.5523 18 15 17.5523 15 17V5" stroke="#e74c3c" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>',E.onclick=()=>g(a.length-1-t),s.appendChild(n),s.appendChild(S),s.appendChild(E),Q.appendChild(s)}))}(e,r)}))}))}function g(e,t){chrome.storage.sync.get(["currentSkid"],(a=>{const s=a.currentSkid||"Default",n=t||r;if("all"===r&&!t)return void console.warn("[SKMT][DELETE] Cannot delete individual match in All Stats mode without mode specified.");const o=h("matchHistory",s,n);chrome.storage.sync.get([o],(t=>{let a=t[o]||[];if(e<0||e>=a.length)return;a.splice(e,1)[0];let l=0,i=0,c=0,m=0,r=0,d=0;a.forEach((e=>{l+=e.kills||0,i+=e.deaths||0,e.joined&&c++,e.started&&m++,e.quit&&r++,"special"===n&&e.isSpecialMode&&!e.quit&&d++,"normal"!==n||e.isSpecialMode||e.isCustomMode||e.quit||d++,"custom"===n&&e.isCustomMode&&!e.quit&&d++}));const u={};u[h("matchHistory",s,n)]=a,u[h("gamesJoined",s,n)]=c,u[h("gamesStarted",s,n)]=m,u[h("gamesQuit",s,n)]=r,u[h("matchesCompleted",s,n)]=d,chrome.storage.sync.set(u,p)}))}))}document.addEventListener("DOMContentLoaded",(()=>{document.getElementById("normalModeBtn").addEventListener("click",(()=>{r="normal",u(),p()})),document.getElementById("specialModeBtn").addEventListener("click",(()=>{r="special",u(),p()})),document.getElementById("customModeBtn").addEventListener("click",(()=>{r="custom",u(),p()})),document.getElementById("allStatsBtn").addEventListener("click",(()=>{r="all",u(),p()})),document.querySelectorAll(".stats-details").forEach((e=>{e.addEventListener("toggle",(()=>{document.querySelectorAll(".stats-details").forEach((e=>{const t=e.querySelector(".stats-section-label").id;d[t]=e.hasAttribute("open")})),chrome.storage.local.set({openSections:d})}))})),document.getElementById("exportStatsBtn").addEventListener("click",k),document.getElementById("importStatsBtn").addEventListener("click",(()=>{document.getElementById("importStatsInput").click()})),document.getElementById("importStatsInput").addEventListener("change",(e=>{e.target.files.length>0&&(async function(e){try{const t=new FileReader;t.onload=async function(e){try{const t=(new TextDecoder).decode(e.target.result),a=await async function(e){try{await E();const t=e.match(/^SKMT_ENCRYPTED_v(\d+\.\d+)_(.+)$/);if(!t)throw new Error("Invalid encrypted data format");if(t[1]!==y)throw new Error("Incompatible encryption version");const a=t[2],s=new Uint8Array(atob(a).split("").map((e=>e.charCodeAt(0)))),n=s.slice(0,12),o=s.slice(12),l=await crypto.subtle.decrypt({name:"AES-GCM",iv:n},S,o),i=new TextDecoder;return JSON.parse(i.decode(l))}catch(e){throw console.error("Decryption error:",e),new Error("Failed to decrypt data")}}(t);if(a.skid!==m)throw new Error("Stats file SKID does not match current SKID");const s=31536e6;if(Date.now()-a.timestamp>s)throw new Error("Stats file is too old");if(!confirm("Are you sure you want to import these stats? This will overwrite your current stats."))return;if(await new Promise((e=>{chrome.storage.sync.set(a.data,e)})),a.data.uiState){const e=a.data.uiState;e.currentMode&&(r=e.currentMode,document.querySelectorAll(".mode-btn").forEach((e=>{e.classList.toggle("active",e.dataset.mode===r)}))),e.openSections&&await new Promise((t=>{chrome.storage.local.set({openSections:e.openSections},t)}))}p(),alert("Stats imported successfully!")}catch(e){console.error("Error processing imported stats:",e),alert(e.message||"Failed to import stats. The file may be corrupted or invalid.")}},t.onerror=function(){alert("Error reading file. Please try again.")},t.readAsArrayBuffer(e)}catch(e){console.error("Error importing stats:",e),alert("Failed to import stats. Please try again.")}}(e.target.files[0]),e.target.value="")})),document.getElementById("visualizeStatsBtn").addEventListener("click",(()=>{console.log("[SKMT] Visualize Stats button clicked");const e=document.getElementById("visualizeStatsBtn");e.disabled=!0;try{chrome.runtime.sendMessage({type:"OPEN_VISUALIZERS"},(t=>(e.disabled=!1,chrome.runtime.lastError?(console.error("[SKMT] Error opening visualizers:",chrome.runtime.lastError),void alert("Failed to open visualizers: "+chrome.runtime.lastError.message)):t?t.success?void console.log("[SKMT] Successfully opened visualizers in tab:",t.tabId):(console.error("[SKMT] Failed to open visualizers:",t.error),void alert("Failed to open visualizers: "+(t.error||"Unknown error"))):(console.error("[SKMT] No response received from background script"),void alert("Failed to open visualizers: No response received")))))}catch(t){e.disabled=!1,console.error("[SKMT] Error sending message:",t),alert("Failed to open visualizers: "+t.message)}})),document.getElementById("resetStatsBtn").addEventListener("click",(function(){if(!m)return;const e=[],t="all"===r?["normal","special","custom"]:[r];if(confirm(`Are you sure you want to reset all stats and match history for ${"all"===r?"all modes":"this mode"} and SKID?`)){t.forEach((t=>{e.push(h("matchHistory",m,t)),e.push(h("gamesJoined",m,t)),e.push(h("gamesStarted",m,t)),e.push(h("gamesQuit",m,t)),e.push(h("matchesCompleted",m,t))}));const a={};e.forEach((e=>a[e]=e.includes("matchHistory")?[]:0)),chrome.storage.sync.set(a,(()=>{console.log("[SKMT][RESET] Stats reset for",t,"mode(s)."),p()}))}})),u(),p(),chrome.storage.local.get(["openSections"],(e=>{e.openSections&&(d=e.openSections,Object.entries(d).forEach((([e,t])=>{const a=document.querySelector(`.stats-details:has(#${e})`);a&&(t?a.setAttribute("open",""):a.removeAttribute("open"))})))}))})),chrome.storage.onChanged.addListener(((e,t)=>{"sync"===t&&m&&Object.keys(e).some((e=>e.includes(`_${m}_`)))&&p()})),chrome.runtime.onMessage.addListener((function(e,t,a){if("SKMT_SKID_UPDATED"===e.type)p();else if("SKMT_MATCH_COMPLETE"===e.type){console.log("[SKMT][POPUP] Received MATCH_COMPLETE message:",e.data);const t=e.data,a=t.isSpecialMode?"special":t.isCustomMode?"custom":"normal",s=m||"Default",n=h("matchHistory",s,a),o=h("gamesJoined",s,a),l=h("gamesStarted",s,a),i=h("gamesQuit",s,a),c=h("matchesCompleted",s,a);chrome.storage.sync.get([n,o,l,i,c],(e=>{let s=e[n]||[],m=e[o]||0,r=e[l]||0,d=e[i]||0,h=e[c]||0;console.log(`[SKMT][POPUP] Before update - Mode: ${a}, Games Joined: ${m}, Games Started: ${r}, Games Quit: ${d}, Matches Completed: ${h}`),s.push(t),t.joined&&m++,t.started&&r++,t.quit&&d++,t.quit||h++,console.log(`[SKMT][POPUP] After update - Mode: ${a}, Games Joined: ${m}, Games Started: ${r}, Games Quit: ${d}, Matches Completed: ${h}`);const u={};u[n]=s,u[o]=m,u[l]=r,u[i]=d,u[c]=h,chrome.storage.sync.set(u,(()=>{console.log(`[SKMT][POPUP] Saved match data and updated stats for ${a} mode.`),p()}))}))}}));const y="1.4";let S=null;async function E(){return S||(S=await async function(){const e=(new TextEncoder).encode("SKMT_SECURE_SALT_v1.4"),t=await crypto.subtle.digest("SHA-256",e);return await crypto.subtle.importKey("raw",t,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}()),S}async function k(){try{const e=["normal","special","custom"],t=["currentSkid"];e.forEach((e=>{t.push(h("matchHistory",m,e)),t.push(h("gamesJoined",m,e)),t.push(h("gamesStarted",m,e)),t.push(h("gamesQuit",m,e)),t.push(h("matchesCompleted",m,e))}));const a=await new Promise((e=>{chrome.storage.sync.get(t,e)})),s=await new Promise((e=>{chrome.storage.local.get(["openSections"],e)})),n={};e.forEach((e=>{const t=a[h("matchHistory",m,e)]||[];let s=0,o=0,l=0,i=0,c=0,r=0,d=0,u=0,p=0,g=0,y=0,S=0,E=0,k=0;t.forEach((e=>{if(e.kills>=3&&s++,e.kills>=5&&o++,e.kills>=7&&l++,e.kills>=10&&i++,e.kills>=15&&c++,e.kills>=20&&r++,e.kills>=25&&d++,e.kills>=30&&u++,e.killTimestamps&&e.killTimestamps.length>0){let t=1,a=e.killTimestamps[0];for(let s=1;s<e.killTimestamps.length;s++){const n=e.killTimestamps[s];n-a<=3e3?(t++,2===t&&p++,3===t&&g++,4===t&&y++,5===t&&S++,6===t&&E++,7===t&&k++):t=1,a=n}}})),n[e]={smashStreak:s,smashtacularStreak:o,smashosaurusStreak:l,smashlvaniaStreak:i,monsterSmashStreak:c,potatoStreak:r,smashSmashStreak:d,potoatachioStreak:u,doubleSmash:p,multiSmash:g,multiMegaSmash:y,multiMegaUltraSmash:S,gooseySmash:E,crazyMultiMegaUltraSmash:k}})),a.streaks=n,a.uiState={currentMode:r,openSections:s.openSections||{},skid:m};const o={version:y,timestamp:Date.now(),skid:m,data:a},l=await async function(e){try{await E();const t=crypto.getRandomValues(new Uint8Array(12)),a=(new TextEncoder).encode(JSON.stringify(e)),s=await crypto.subtle.encrypt({name:"AES-GCM",iv:t},S,a),n=new Uint8Array(t.length+s.byteLength);n.set(t),n.set(new Uint8Array(s),t.length);const o=btoa(String.fromCharCode.apply(null,n));return`SKMT_ENCRYPTED_v${y}_${o}`}catch(e){throw console.error("Encryption error:",e),new Error("Failed to encrypt data")}}(o),i=new Blob([l],{type:"application/octet-stream"}),c=URL.createObjectURL(i),d=document.createElement("a");d.href=c,d.download=`smash_karts_stats_${m}_${(new Date).toISOString().split("T")[0]}.skmt`,document.body.appendChild(d),d.click(),document.body.removeChild(d),URL.revokeObjectURL(c)}catch(e){console.error("Error exporting stats:",e),alert("Failed to export stats. Please try again.")}}function f(e){const t=document.getElementById("matchInfoModal"),a=document.getElementById("match-info-modal-body");let s=[];e.joined&&s.push("Joined"),e.started&&s.push("Started"),e.quit?s.push("Quit"):s.push("Completed"),e.isSpecialMode&&s.push("Special Mode"),e.isCustomMode&&s.push("Custom Match"),e.mode&&s.push(`${e.mode.charAt(0).toUpperCase()+e.mode.slice(1)} Mode`);const n=e.duration||(e.matchEndTime&&e.matchStartTime?e.matchEndTime-e.matchStartTime:0);let o=[];Array.isArray(e.players)&&(o=[...new Set(e.players)]);const m=[{name:"Smash Streak (3)",value:0},{name:"Smashtacular Streak (5)",value:0},{name:"Smashosaurus Streak (7)",value:0},{name:"Smashlvania Streak (10)",value:0},{name:"Monster Smash Streak (15)",value:0},{name:"Potato Streak (20)",value:0},{name:"Smash Smash Smash Smash Smash Smash Smash Smash Streak (25)",value:0},{name:"Potoatachio Streak (30)",value:0}];let r=0,d={};const h=[];e.killTimestamps&&e.killTimestamps.forEach((e=>h.push({type:"kill",time:e}))),e.deathTimestamps&&e.deathTimestamps.forEach((e=>h.push({type:"death",time:e}))),h.sort(((e,t)=>e.time-t.time)),h.forEach((e=>{"death"===e.type?(r=0,d={}):"kill"===e.type&&(r++,r>=3&&!d[3]&&(m[0].value++,d[3]=!0),r>=5&&!d[5]&&(m[1].value++,d[5]=!0),r>=7&&!d[7]&&(m[2].value++,d[7]=!0),r>=10&&!d[10]&&(m[3].value++,d[10]=!0),r>=15&&!d[15]&&(m[4].value++,d[15]=!0),r>=20&&!d[20]&&(m[5].value++,d[20]=!0),r>=25&&!d[25]&&(m[6].value++,d[25]=!0),r>=30&&!d[30]&&(m[7].value++,d[30]=!0))}));const u=[{name:"Double Smash (2)",value:0},{name:"Multi Smash (3)",value:0},{name:"Multi Mega Smash (4)",value:0},{name:"Multi Mega Ultra Smash (5)",value:0},{name:"Goosey Smash (6)",value:0},{name:"Crazy Multi Mega Ultra Smash (7)",value:0}];if(e.killTimestamps&&e.killTimestamps.length>0){let t=1,a=e.killTimestamps[0];for(let s=1;s<e.killTimestamps.length;s++){const n=e.killTimestamps[s];n-a<=3e3?(t++,2===t&&u[0].value++,3===t&&u[1].value++,4===t&&u[2].value++,5===t&&u[3].value++,6===t&&u[4].value++,7===t&&u[5].value++):t=1,a=n}}a.innerHTML=`\n        <div class="match-info-title">Match Information</div>\n        <div class="match-info-section"><span class="match-info-label">Start:</span><span class="match-info-value">${l(e.matchStartTime)}</span></div>\n        <div class="match-info-section"><span class="match-info-label">End:</span><span class="match-info-value">${l(e.matchEndTime)}</span></div>\n        <div class="match-info-section"><span class="match-info-label">Kills:</span><span class="match-info-value">${e.kills}</span></div>\n        <div class="match-info-section"><span class="match-info-label">Deaths:</span><span class="match-info-value">${e.deaths}</span></div>\n        <div class="match-info-section"><span class="match-info-label">KDR:</span><span class="match-info-value">${i(e.kills,e.deaths)}</span></div>\n        <div class="match-info-section"><span class="match-info-label">Duration:</span><span class="match-info-value">${c(n)}</span></div>\n        ${m.filter((e=>e.value>0)).length>0?`\n        <div class="match-info-section">\n            <span class="match-info-label" style="display:block;margin-bottom:6px;">Streaks (Without Dying):</span>\n            <table style="width:100%;font-size:16px;margin-bottom:8px;">\n                <tbody>\n                ${m.filter((e=>e.value>0)).map((e=>`<tr><td>${e.name}</td><td style='text-align:right;'>${e.value}</td></tr>`)).join("")}\n                </tbody>\n            </table>\n        </div>`:""}\n        ${u.filter((e=>e.value>0)).length>0?`\n        <div class="match-info-section">\n            <span class="match-info-label" style="display:block;margin-bottom:6px;">Streaks (Quick Kills):</span>\n            <table style="width:100%;font-size:16px;margin-bottom:8px;">\n                <tbody>\n                ${u.filter((e=>e.value>0)).map((e=>`<tr><td>${e.name}</td><td style='text-align:right;'>${e.value}</td></tr>`)).join("")}\n                </tbody>\n            </table>\n        </div>`:""}\n        <div class="match-info-section">\n            <span class="match-info-label" style="display:block;margin-bottom:6px;">Detected Players In Room:</span>\n            <ul style="margin:0 0 0 12px;padding:0;list-style:disc;">\n                ${o.length>0?o.map((e=>`<li style='font-size:16px;'>${e}</li>`)).join(""):'<li style="color:#aaa;font-size:16px;">No players detected</li>'}\n            </ul>\n        </div>\n        <div class="match-info-indicators">${s.join(" | ")}</div>\n    `,t.style.display="flex"}document.getElementById("closeMatchInfoModal")&&(document.getElementById("closeMatchInfoModal").onclick=function(){document.getElementById("matchInfoModal").style.display="none"}),document.getElementById("matchInfoModal")&&(document.getElementById("matchInfoModal").onclick=function(e){e.target===this&&(this.style.display="none")})})();