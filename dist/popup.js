(()=>{document.getElementById("kills"),document.getElementById("deaths"),document.getElementById("matches"),document.getElementById("matches-list");const t=document.getElementById("statsBtn"),e=document.getElementById("hudBtn"),a=document.getElementById("statsSection"),n=document.getElementById("hudSection");a.classList.add("active"),t.addEventListener("click",(()=>{t.classList.add("selected"),e.classList.remove("selected"),a.style.display="block",n.style.display="none"})),e.addEventListener("click",(()=>{e.classList.add("selected"),t.classList.remove("selected"),a.style.display="none",n.style.display="block"}));const s=document.getElementById("toggleDeathsHud"),o=document.getElementById("toggleKillStreakHud");function l(t){return t?new Date(t).toLocaleString(void 0,{hour:"2-digit",minute:"2-digit",second:"2-digit",year:"2-digit",month:"2-digit",day:"2-digit"}):"-"}function i(t,e){return 0===e?t>0?t.toFixed(2):"0.00":(t/e).toFixed(2)}function c(t){const e=Math.floor(t/1e3),a=Math.floor(e/3600),n=Math.floor(e%3600/60),s=e%60;return a>0?`${a}h ${n}m ${s}s`:n>0?`${n}m ${s}s`:`${s}s`}s.addEventListener("change",(function(){const t=this.checked;chrome.storage.sync.set({deathsHudEnabled:t}),chrome.tabs.query({active:!0,currentWindow:!0},(e=>{chrome.tabs.sendMessage(e[0].id,{type:"toggle-deaths-hud",enabled:t})}))})),o.addEventListener("change",(function(){const t=this.checked;chrome.storage.sync.set({killStreakHudEnabled:t}),chrome.tabs.query({active:!0,currentWindow:!0},(e=>{chrome.tabs.sendMessage(e[0].id,{type:"toggle-killstreak-hud",enabled:t})}))})),chrome.storage.sync.get(["deathsHudEnabled","killStreakHudEnabled"],(t=>{s.checked=!1!==t.deathsHudEnabled,o.checked=!1!==t.killStreakHudEnabled,chrome.tabs.query({active:!0,currentWindow:!0},(t=>{chrome.tabs.sendMessage(t[0].id,{type:"toggle-deaths-hud",enabled:s.checked}),chrome.tabs.sendMessage(t[0].id,{type:"toggle-killstreak-hud",enabled:o.checked})}))}));let m="Default",d="normal",r="all",h={primaryStats:!1,secondaryStats:!1,averageStats:!1,streaks:!1,quickKills:!1};function u(t,e,a){const n=a||d;return"all"===n?null:`${t}_${e}_${n}`}function p(){document.getElementById("normalModeBtn").classList.toggle("selected","normal"===d),document.getElementById("specialModeBtn").classList.toggle("selected","special"===d),document.getElementById("customModeBtn").classList.toggle("selected","custom"===d),document.getElementById("allStatsBtn").classList.toggle("selected","all"===d),document.getElementById("primaryStatsHeader").textContent="all"===d?"All Modes Primary Stats":"Primary Stats",document.getElementById("secondaryStatsHeader").textContent="all"===d?"All Modes Secondary Stats":"Secondary Stats"}function g(t,e){let a=[],n=new Map;"all"===e?["normal","special","custom"].forEach((e=>{const s=t[u("matchHistory",m,e)]||[];a=a.concat(s),s.forEach((t=>{if(t.map){const e=n.get(t.map)||0;n.set(t.map,e+1)}}))})):(a=t[u("matchHistory",m,e)]||[],a.forEach((t=>{if(t.map){const e=n.get(t.map)||0;n.set(t.map,e+1)}})));const s=document.getElementById("mapFilter"),o=s.value||"all";s.innerHTML='<option value="all">All Maps</option>',Array.from(n.entries()).sort(((t,e)=>e[1]-t[1])).forEach((([t,e])=>{const a=document.createElement("option");a.value=t,a.textContent=t,s.appendChild(a)})),[...s.options].some((t=>t.value===o))?(s.value=o,r=o):(s.value="all",r="all");const l="all"===r?a:a.filter((t=>t.map===r));let d=0,h=0,p=0;l.forEach((t=>{d+=t.kills||0,h+=t.deaths||0,p+=t.duration||(t.matchEndTime&&t.matchStartTime?t.matchEndTime-t.matchStartTime:0)}));let g=0;"all"===e?["normal","special","custom"].forEach((e=>{g+=t[u("gamesQuit",m,e)]||0})):g=t[u("gamesQuit",m,e)]||0,console.log("[SKMT][DISPLAY] Current gamesQuit value:",g,"Mode:",e),document.getElementById("gamesQuit").textContent=g;const y=document.getElementById("mapsList");y.innerHTML="";const S=Array.from(n.entries()).sort(((t,e)=>e[1]-t[1]));if(S.forEach((([t,e])=>{const a=document.createElement("div");a.className="stat-card",a.innerHTML=`\n            <span class="stat-label">${t}</span>\n            <span class="stat-value">${e}</span>\n        `,y.appendChild(a)})),0===S.length){const t=document.createElement("div");t.className="no-maps",t.textContent="No maps played yet in this mode",y.appendChild(t)}let E=0,f=0,k=0,v=0,M=0,I=0,B=0,b=0,x=0,$=0,w=0,L=0,D=0,H=0,K=0,A=0,z=0,F=0,P=0,U=0,R=0,q=0;l.forEach((t=>{t.kills>v&&(v=t.kills),t.deaths>M&&(M=t.deaths);const e=t.deaths>0?t.kills/t.deaths:t.kills;e>B&&(B=e);const a=t.duration||(t.matchEndTime&&t.matchStartTime?t.matchEndTime-t.matchStartTime:0);if(a>b&&(b=a),t.killTimestamps&&t.killTimestamps.length>0){let e=0,a=0;const n=[];t.killTimestamps&&t.killTimestamps.forEach((t=>n.push({type:"kill",time:t}))),t.deathTimestamps&&t.deathTimestamps.forEach((t=>n.push({type:"death",time:t}))),n.sort(((t,e)=>t.time-e.time)),n.forEach((t=>{"death"===t.type?(e>a&&(a=e),e=0):"kill"===t.type&&(e++,e>a&&(a=e))})),a>I&&(I=a)}let n=0,s=null,o=0,l={};const i=[];t.killTimestamps&&t.killTimestamps.forEach((t=>i.push({type:"kill",time:t}))),t.deathTimestamps&&t.deathTimestamps.forEach((t=>i.push({type:"death",time:t}))),i.sort(((t,e)=>t.time-e.time)),i.forEach((t=>{"death"===t.type?(n=0,l={},o=0,s=null):"kill"===t.type&&(n++,n>=3&&!l[3]&&(x++,l[3]=!0),n>=5&&!l[5]&&($++,l[5]=!0),n>=7&&!l[7]&&(w++,l[7]=!0),n>=10&&!l[10]&&(L++,l[10]=!0),n>=15&&!l[15]&&(D++,l[15]=!0),n>=20&&!l[20]&&(H++,l[20]=!0),n>=25&&!l[25]&&(K++,l[25]=!0),n>=30&&!l[30]&&(A++,l[30]=!0),null===s?(o=1,s=t.time):(t.time-s<=4e3?(o++,2===o&&z++,3===o&&F++,4===o&&P++,5===o&&U++,6===o&&R++,7===o&&q++):o=1,s=t.time))})),t.joined&&E++,t.started&&f++,t.quit&&g++,t.quit||k++})),document.getElementById("highestKillsRecord").textContent=v,document.getElementById("highestDeathsRecord").textContent=M,document.getElementById("highestKillStreakRecord").textContent=I,document.getElementById("highestKDRRecord").textContent=B.toFixed(2),document.getElementById("longestTimePlayedRecord").textContent=c(b),document.getElementById("smashStreak").textContent=x,document.getElementById("smashtacularStreak").textContent=$,document.getElementById("smashosaurusStreak").textContent=w,document.getElementById("smashlvaniaStreak").textContent=L,document.getElementById("monsterSmashStreak").textContent=D,document.getElementById("potatoStreak").textContent=H,document.getElementById("smashSmashStreak").textContent=K,document.getElementById("potoatachioStreak").textContent=A,document.getElementById("doubleSmash").textContent=z,document.getElementById("multiSmash").textContent=F,document.getElementById("multiMegaSmash").textContent=P,document.getElementById("multiMegaUltraSmash").textContent=U,document.getElementById("gooseySmash").textContent=R,document.getElementById("crazyMultiMegaUltraSmash").textContent=q,document.getElementById("streaksHeader").textContent="all"===e?"All Modes Streaks (Without Dying)":"Streaks (Without Dying)",document.getElementById("quickKillsHeader").textContent="all"===e?"All Modes Streaks (Quick Kills)":"Streaks (Quick Kills)";const O=(k||0)+(g||0);document.getElementById("killsLabel").textContent="all"===e?"Total Kills":"Kills",document.getElementById("deathsLabel").textContent="all"===e?"Total Deaths":"Deaths",document.getElementById("kdrLabel").textContent="all"===e?"Overall KDR":"KDR",document.getElementById("matchesCompletedLabel").textContent="all"===e?"Total Matches Completed":"Matches Completed",document.getElementById("totalTimeSpentLabel").textContent="all"===e?"Total Time Played":"Time Played",document.getElementById("gamesJoinedLabel").textContent="all"===e?"Total Matches Joined":"Matches Joined",document.getElementById("totalMatchesLabel").textContent="Total Matches (Completed + Quit)",console.log("[SKMT][POPUP][DISPLAY] Updating gamesQuit display. Value:",g,"Element:",document.getElementById("gamesQuit")),document.getElementById("kills").textContent=d,document.getElementById("deaths").textContent=h,document.getElementById("kdr").textContent=i(d,h),document.getElementById("totalTimeSpent").textContent=c(p),document.getElementById("gamesJoined").textContent=E,document.getElementById("gamesStarted").textContent=f,document.getElementById("gamesQuit").textContent=g,document.getElementById("matchesCompleted").textContent=k,document.getElementById("totalMatches").textContent=O;const N=O>0?(k||0)/O*100:0,_=O>0?(g||0)/O*100:0;document.getElementById("matchesCompletedRate").textContent=`${N.toFixed(2)}%`,document.getElementById("matchesQuitRate").textContent=`${_.toFixed(2)}%`;const Q=l.filter((t=>!t.quit)).length,J=Q>0?d/Q:0,j=Q>0?h/Q:0,V=Q>0?p/Q:0;document.getElementById("avgKills").textContent=J.toFixed(2),document.getElementById("avgDeaths").textContent=j.toFixed(2),document.getElementById("avgTimeSpent").textContent=c(V),document.getElementById("averageStatsHeader").textContent="all"===e?"All Modes Average Stats":"Average Stats",document.getElementById("matches-list").innerHTML="";let W=[];if("all"===e){const e=[];["normal","special","custom"].forEach((a=>{(t[u("matchHistory",m,a)]||[]).forEach((t=>{e.push({...t,mode:a})}))})),W=e}else W=a.slice().reverse();const G=document.getElementById("matchSortSelect")?document.getElementById("matchSortSelect").value:"recent";"recent"===G?W.sort(((t,e)=>(e.matchStartTime||0)-(t.matchStartTime||0))):"oldest"===G?W.sort(((t,e)=>(t.matchStartTime||0)-(e.matchStartTime||0))):"kills"===G?W.sort(((t,e)=>(e.kills||0)-(t.kills||0))):"favorites"===G&&(W=W.filter((t=>C[t.matchStartTime])),W.sort(((t,e)=>(e.matchStartTime||0)-(t.matchStartTime||0)))),T(W,e)}function y(){chrome.storage.sync.get(["currentSkid"],(t=>{m=t.currentSkid||"Default",document.getElementById("skidValue").textContent=m;const e=["currentSkid"];"all"===d?["normal","special","custom"].forEach((t=>{e.push(u("matchHistory",m,t)),e.push(u("gamesJoined",m,t)),e.push(u("gamesStarted",m,t)),e.push(u("gamesQuit",m,t)),e.push(u("matchesCompleted",m,t))})):(e.push(u("matchHistory",m,d)),e.push(u("gamesJoined",m,d)),e.push(u("gamesStarted",m,d)),e.push(u("gamesQuit",m,d)),e.push(u("matchesCompleted",m,d))),console.log("[SKMT][LOAD] Loading stats for SKID:",m,"Mode:",d,"Keys:",e),chrome.storage.sync.get(e,(t=>{console.log("[SKMT][LOAD] Data returned from chrome.storage.sync:",t),document.querySelector(".match-history").style.display="block",g(t,d)}))}))}document.addEventListener("DOMContentLoaded",(()=>{document.getElementById("normalModeBtn").addEventListener("click",(()=>{d="normal",p(),y()})),document.getElementById("specialModeBtn").addEventListener("click",(()=>{d="special",p(),y()})),document.getElementById("customModeBtn").addEventListener("click",(()=>{d="custom",p(),y()})),document.getElementById("allStatsBtn").addEventListener("click",(()=>{d="all",p(),y()})),document.querySelectorAll(".stats-details").forEach((t=>{t.addEventListener("toggle",(()=>{document.querySelectorAll(".stats-details").forEach((t=>{const e=t.querySelector(".stats-section-label").id;h[e]=t.hasAttribute("open")})),chrome.storage.local.set({openSections:h})}))})),document.getElementById("exportStatsBtn").addEventListener("click",k),document.getElementById("importStatsBtn").addEventListener("click",(()=>{document.getElementById("importStatsInput").click()})),document.getElementById("importStatsInput").addEventListener("change",(t=>{t.target.files.length>0&&(async function(t){try{const e=new FileReader;e.onload=async function(t){try{const e=(new TextDecoder).decode(t.target.result),a=await async function(t){try{await f();const e=t.match(/^SKMT_ENCRYPTED_v(\d+\.\d+)_(.+)$/);if(!e)throw new Error("Invalid encrypted data format");if(e[1]!==S)throw new Error("Incompatible encryption version");const a=e[2],n=new Uint8Array(atob(a).split("").map((t=>t.charCodeAt(0)))),s=n.slice(0,12),o=n.slice(12),l=await crypto.subtle.decrypt({name:"AES-GCM",iv:s},E,o),i=new TextDecoder;return JSON.parse(i.decode(l))}catch(t){throw console.error("Decryption error:",t),new Error("Failed to decrypt data")}}(e);if(a.skid!==m)throw new Error("Stats file SKID does not match current SKID");const n=31536e6;if(Date.now()-a.timestamp>n)throw new Error("Stats file is too old");if(!confirm("Are you sure you want to import these stats? This will overwrite your current stats."))return;if(await new Promise((t=>{chrome.storage.sync.set(a.data,t)})),a.data.uiState){const t=a.data.uiState;t.currentMode&&(d=t.currentMode,document.querySelectorAll(".mode-btn").forEach((t=>{t.classList.toggle("active",t.dataset.mode===d)}))),t.openSections&&await new Promise((e=>{chrome.storage.local.set({openSections:t.openSections},e)}))}y(),alert("Stats imported successfully!")}catch(t){console.error("Error processing imported stats:",t),alert(t.message||"Failed to import stats. The file may be corrupted or invalid.")}},e.onerror=function(){alert("Error reading file. Please try again.")},e.readAsArrayBuffer(t)}catch(t){console.error("Error importing stats:",t),alert("Failed to import stats. Please try again.")}}(t.target.files[0]),t.target.value="")})),document.getElementById("visualizeStatsBtn").addEventListener("click",(()=>{console.log("[SKMT] Visualize Stats button clicked");const t=document.getElementById("visualizeStatsBtn");t.disabled=!0;try{chrome.runtime.sendMessage({type:"OPEN_VISUALIZERS"},(e=>(t.disabled=!1,chrome.runtime.lastError?(console.error("[SKMT] Error opening visualizers:",chrome.runtime.lastError),void alert("Failed to open visualizers: "+chrome.runtime.lastError.message)):e?e.success?void console.log("[SKMT] Successfully opened visualizers in tab:",e.tabId):(console.error("[SKMT] Failed to open visualizers:",e.error),void alert("Failed to open visualizers: "+(e.error||"Unknown error"))):(console.error("[SKMT] No response received from background script"),void alert("Failed to open visualizers: No response received")))))}catch(e){t.disabled=!1,console.error("[SKMT] Error sending message:",e),alert("Failed to open visualizers: "+e.message)}})),document.getElementById("resetStatsBtn").addEventListener("click",(function(){if(!m)return;const t=[],e="all"===d?["normal","special","custom"]:[d];if(confirm(`Are you sure you want to reset all stats and match history for ${"all"===d?"all modes":"this mode"} and SKID?`)){e.forEach((e=>{t.push(u("matchHistory",m,e)),t.push(u("gamesJoined",m,e)),t.push(u("gamesStarted",m,e)),t.push(u("gamesQuit",m,e)),t.push(u("matchesCompleted",m,e))}));const a={};t.forEach((t=>a[t]=t.includes("matchHistory")?[]:0)),chrome.storage.sync.set(a,(()=>{console.log("[SKMT][RESET] Stats reset for",e,"mode(s)."),y()}))}})),p(),y(),chrome.storage.local.get(["openSections"],(t=>{t.openSections&&(h=t.openSections,Object.entries(h).forEach((([t,e])=>{const a=document.querySelector(`.stats-details:has(#${t})`);a&&(e?a.setAttribute("open",""):a.removeAttribute("open"))})))}))})),chrome.storage.onChanged.addListener(((t,e)=>{"sync"===e&&m&&Object.keys(t).some((t=>t.includes(`_${m}_`)))&&y()})),chrome.runtime.onMessage.addListener((function(t,e,a){if("SKMT_SKID_UPDATED"===t.type)y();else if("SKMT_MATCH_COMPLETE"===t.type){console.log("[SKMT][POPUP] Received MATCH_COMPLETE message:",t.data);const e=t.data,a=e.isSpecialMode?"special":e.isCustomMode?"custom":"normal",n=m||"Default",s=u("gamesQuit",n,a);if(e.quit)chrome.storage.sync.get([s],(t=>{let n=t[s]||0;n++;const o={};o[s]=n,console.log(`[SKMT][POPUP] Incrementing gamesQuit for ${a} mode. New value:`,n),chrome.storage.sync.set(o,(()=>{console.log(`[SKMT][POPUP] Saved quit counter for ${a} mode:`,{quit:e.quit,isSpecialMode:e.isSpecialMode,isCustomMode:e.isCustomMode,gamesQuit:n}),y()}))}));else{const t=u("matchHistory",n,a),s=u("gamesJoined",n,a),o=u("gamesStarted",n,a),l=u("matchesCompleted",n,a);chrome.storage.sync.get([t,s,o,l],(n=>{let i=n[t]||[],c=n[s]||0,m=n[o]||0,d=n[l]||0;i.push(e),e.joined&&c++,e.started&&m++,d++;const r={};r[t]=i,r[s]=c,r[o]=m,r[l]=d,chrome.storage.sync.set(r,(()=>{console.log(`[SKMT][POPUP] Saved completed match data for ${a} mode:`,{quit:e.quit,isSpecialMode:e.isSpecialMode,isCustomMode:e.isCustomMode,savedToHistory:!0}),y()}))}))}}}));const S="1.4";let E=null;async function f(){return E||(E=await async function(){const t=(new TextEncoder).encode("SKMT_SECURE_SALT_v1.4"),e=await crypto.subtle.digest("SHA-256",t);return await crypto.subtle.importKey("raw",e,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}()),E}async function k(){try{const t=["normal","special","custom"],e=["currentSkid"];t.forEach((t=>{e.push(u("matchHistory",m,t)),e.push(u("gamesJoined",m,t)),e.push(u("gamesStarted",m,t)),e.push(u("gamesQuit",m,t)),e.push(u("matchesCompleted",m,t))}));const a=await new Promise((t=>{chrome.storage.sync.get(e,t)})),n=await new Promise((t=>{chrome.storage.local.get(["openSections"],t)})),s={};t.forEach((t=>{const e=a[u("matchHistory",m,t)]||[];let n=0,o=0,l=0,i=0,c=0,d=0,r=0,h=0,p=0,g=0,y=0,S=0,E=0,f=0,k=0,v=0,M=0,I=0;e.forEach((t=>{t.kills>=3&&n++,t.kills>=5&&o++,t.kills>=7&&l++,t.kills>=10&&i++,t.kills>=15&&c++,t.kills>=20&&d++,t.kills>=25&&r++,t.kills>=30&&h++,t.kills>k&&(k=t.kills),t.deaths>v&&(v=t.deaths);const e=t.deaths>0?t.kills/t.deaths:t.kills;if(e>I&&(I=e),t.killTimestamps&&t.killTimestamps.length>0){let e=0,a=0;const n=[];t.killTimestamps&&t.killTimestamps.forEach((t=>n.push({type:"kill",time:t}))),t.deathTimestamps&&t.deathTimestamps.forEach((t=>n.push({type:"death",time:t}))),n.sort(((t,e)=>t.time-e.time)),n.forEach((t=>{"death"===t.type?(e>a&&(a=e),e=0):"kill"===t.type&&(e++,e>a&&(a=e))})),a>M&&(M=a)}if(t.killTimestamps&&t.killTimestamps.length>0){let e=0,a=t.killTimestamps[0];for(let n=1;n<t.killTimestamps.length;n++){const s=t.killTimestamps[n];s-a<=4e3?(e++,2===e&&p++,3===e&&g++,4===e&&y++,5===e&&S++,6===e&&E++,7===e&&f++):e=1,a=s}}})),s[t]={smashStreak:n,smashtacularStreak:o,smashosaurusStreak:l,smashlvaniaStreak:i,monsterSmashStreak:c,potatoStreak:d,smashSmashStreak:r,potoatachioStreak:h,doubleSmash:p,multiSmash:g,multiMegaSmash:y,multiMegaUltraSmash:S,gooseySmash:E,crazyMultiMegaUltraSmash:f,highestKillsRecord:k,highestDeathsRecord:v,highestKillStreakRecord:M,highestKDRRecord:I}})),a.stats=s,a.uiState={currentMode:d,openSections:n.openSections||{},skid:m};const o={version:S,timestamp:Date.now(),skid:m,data:a},l=await async function(t){try{await f();const e=crypto.getRandomValues(new Uint8Array(12)),a=(new TextEncoder).encode(JSON.stringify(t)),n=await crypto.subtle.encrypt({name:"AES-GCM",iv:e},E,a),s=new Uint8Array(e.length+n.byteLength);s.set(e),s.set(new Uint8Array(n),e.length);const o=btoa(String.fromCharCode.apply(null,s));return`SKMT_ENCRYPTED_v${S}_${o}`}catch(t){throw console.error("Encryption error:",t),new Error("Failed to encrypt data")}}(o),i=new Blob([l],{type:"application/octet-stream"}),c=URL.createObjectURL(i),r=document.createElement("a");r.href=c,r.download=`smash_karts_stats_${m}_${(new Date).toISOString().split("T")[0]}.skmt`,document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(c)}catch(t){console.error("Error exporting stats:",t),alert("Failed to export stats. Please try again.")}}document.getElementById("closeMatchInfoModal")&&(document.getElementById("closeMatchInfoModal").onclick=function(){document.getElementById("matchInfoModal").style.display="none"}),document.getElementById("matchInfoModal")&&(document.getElementById("matchInfoModal").onclick=function(t){t.target===this&&(this.style.display="none")});let v=null;function M(){const t=document.getElementById("hudSettingsModal");document.getElementById("hudSettingsTitle").textContent=("deaths"===v?"Deaths":"Kill Streak")+" HUD Settings";const e=`${v}HudSettings`;chrome.storage.sync.get([e],(t=>{const a=t[e]||{fontSize:32,fontColor:"#ffffff",fontFamily:"Arial, sans-serif",backgroundColor:"rgba(0, 0, 0, 0.5)"};document.getElementById("hudFontSize").value=a.fontSize,document.getElementById("fontSizeValue").textContent=`${a.fontSize}px`,document.getElementById("hudFontColor").value=a.fontColor,document.getElementById("hudFontFamily").value=a.fontFamily,document.getElementById("hudBackgroundColor").value=a.backgroundColor?function(t){const e=t.substring(t.indexOf("(")+1,t.indexOf(")")).split(",");return`#${((1<<24)+(parseInt(e[0].trim())<<16)+(parseInt(e[1].trim())<<8)+parseInt(e[2].trim())).toString(16).slice(1).toUpperCase()}`}(a.backgroundColor):"#000000"})),t.style.display="flex"}function I(){const t={fontSize:document.getElementById("hudFontSize").value,fontColor:document.getElementById("hudFontColor").value,fontFamily:document.getElementById("hudFontFamily").value,backgroundColor:B(document.getElementById("hudBackgroundColor").value,.5)},e=`${v}HudSettings`;chrome.storage.sync.set({[e]:t}),chrome.tabs.query({active:!0,currentWindow:!0},(e=>{chrome.tabs.sendMessage(e[0].id,{type:`update-${v}-hud-style`,settings:t})}))}function B(t,e){const a=parseInt(t.slice(1),16);return`rgba(${a>>16&255}, ${a>>8&255}, ${255&a}, ${e})`}document.getElementById("deathsHudSettings").addEventListener("click",(()=>{v="deaths",M()})),document.getElementById("killStreakHudSettings").addEventListener("click",(()=>{v="killstreak",M()})),document.getElementById("closeHudSettingsModal").addEventListener("click",(()=>{document.getElementById("hudSettingsModal").style.display="none"})),document.getElementById("hudSettingsModal").addEventListener("click",(t=>{t.target===document.getElementById("hudSettingsModal")&&(document.getElementById("hudSettingsModal").style.display="none")})),document.getElementById("hudFontSize").addEventListener("input",(t=>{const e=t.target.value;document.getElementById("fontSizeValue").textContent=`${e}px`,I()})),document.getElementById("hudFontColor").addEventListener("change",I),document.getElementById("hudFontFamily").addEventListener("change",I),document.getElementById("hudBackgroundColor").addEventListener("input",I),document.getElementById("mapFilter").addEventListener("change",(function(t){r=t.target.value,y()}));let C=JSON.parse(localStorage.getItem("favoriteMatches")||"{}");function T(t,e){const a=document.getElementById("matches-list");a.innerHTML="",t.forEach(((n,s)=>{const o=document.createElement("div");o.className="match-card";const m=document.createElement("div");m.className="match-card-content";const r=document.createElement("div");if(r.className="match-meta",r.textContent=`#${t.length-s} | ${l(n.matchStartTime)} - ${l(n.matchEndTime)}`,m.appendChild(r),n.map){const t=document.createElement("div");t.className="match-map",t.textContent=n.map,m.appendChild(t)}const h=document.createElement("div");h.className="match-stats",h.innerHTML="",h.innerHTML+=`<span>Kills:</span><b>${n.kills}</b>`,h.innerHTML+=`<span>Deaths:</span><b>${n.deaths}</b>`,h.innerHTML+=`<span>KDR:</span><b>${i(n.kills,n.deaths)}</b>`;const p=n.duration||(n.matchEndTime&&n.matchStartTime?n.matchEndTime-n.matchStartTime:0),g=Math.floor(p/36e5),S=Math.floor(p%36e5/6e4),E=Math.floor(p%6e4/1e3);let f;f=g>0?`${g}h ${S}m ${E}s`:`${S}m ${E}s`,h.innerHTML+=`<span>Duration:</span><b>${f}</b>`,m.appendChild(h);const k=document.createElement("div");k.className="match-flags";let v=[];n.joined&&v.push("Joined"),n.started&&v.push("Started"),n.quit?v.push("Quit"):v.push("Completed"),n.isSpecialMode&&v.push("Special Mode"),n.isCustomMode&&v.push("Custom Match"),n.mode&&v.push(`${n.mode.charAt(0).toUpperCase()+n.mode.slice(1)} Mode`),v.length>0&&(k.textContent=v.join(" | ")),m.appendChild(k);const M=document.createElement("button");M.className="star-btn",M.title="Favorite this match",M.innerHTML='<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><polygon points="10,2 12.59,7.36 18.51,8.09 14,12.26 15.18,18.09 10,15.27 4.82,18.09 6,12.26 1.49,8.09 7.41,7.36" stroke="#FFD700" stroke-width="1.5" fill="'+(C[n.matchStartTime]?"#FFD700":"white")+'"/></svg>',M.style.background="none",M.style.border="none",M.style.cursor="pointer",M.style.marginRight="4px",M.onclick=()=>{C[n.matchStartTime]?delete C[n.matchStartTime]:C[n.matchStartTime]=!0,localStorage.setItem("favoriteMatches",JSON.stringify(C)),T(t,e)};const I=document.createElement("button");I.className="info-btn",I.title="View match information",I.innerHTML='<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="10" cy="10" r="9" stroke="#3498db" stroke-width="2" fill="white"/><rect x="9" y="8" width="2" height="6" rx="1" fill="#3498db"/><rect x="9" y="5" width="2" height="2" rx="1" fill="#3498db"/></svg>',I.onclick=()=>function(t){const e=document.getElementById("matchInfoModal"),a=document.getElementById("match-info-modal-body");let n=[];t.joined&&n.push("Joined"),t.started&&n.push("Started"),t.quit?n.push("Quit"):n.push("Completed"),t.isSpecialMode&&n.push("Special Mode"),t.isCustomMode&&n.push("Custom Match"),t.mode&&n.push(`${t.mode.charAt(0).toUpperCase()+t.mode.slice(1)} Mode`);const s=t.duration||(t.matchEndTime&&t.matchStartTime?t.matchEndTime-t.matchStartTime:0);let o=0,m={smashStreak:0,smashtacularStreak:0,smashosaurusStreak:0,smashlvaniaStreak:0,monsterSmashStreak:0,potatoStreak:0,smashSmashStreak:0,potoatachioStreak:0},d={doubleSmash:0,multiSmash:0,multiMegaSmash:0,multiMegaUltraSmash:0,gooseySmash:0,crazyMultiMegaUltraSmash:0};if(t.killTimestamps&&t.killTimestamps.length>0){let e=0,a=0,n=0,s=null,l={};const i=[];t.killTimestamps&&t.killTimestamps.forEach((t=>i.push({type:"kill",time:t}))),t.deathTimestamps&&t.deathTimestamps.forEach((t=>i.push({type:"death",time:t}))),i.sort(((t,e)=>t.time-e.time)),i.forEach((t=>{"death"===t.type?(e>a&&(a=e),e=0,l={},n=0,s=null):"kill"===t.type&&(e++,e>a&&(a=e),e>=3&&!l[3]&&(m.smashStreak++,l[3]=!0),e>=5&&!l[5]&&(m.smashtacularStreak++,l[5]=!0),e>=7&&!l[7]&&(m.smashosaurusStreak++,l[7]=!0),e>=10&&!l[10]&&(m.smashlvaniaStreak++,l[10]=!0),e>=15&&!l[15]&&(m.monsterSmashStreak++,l[15]=!0),e>=20&&!l[20]&&(m.potatoStreak++,l[20]=!0),e>=25&&!l[25]&&(m.smashSmashStreak++,l[25]=!0),e>=30&&!l[30]&&(m.potoatachioStreak++,l[30]=!0),null===s?(n=1,s=t.time):(t.time-s<=4e3?(n++,2===n&&d.doubleSmash++,3===n&&d.multiSmash++,4===n&&d.multiMegaSmash++,5===n&&d.multiMegaUltraSmash++,6===n&&d.gooseySmash++,7===n&&d.crazyMultiMegaUltraSmash++):n=1,s=t.time))})),o=a}let r=[];Array.isArray(t.players)&&(r=[...new Set(t.players)]),a.innerHTML=`\n        <div class="match-info-title">Match Information</div>\n        ${t.map?`<div class="match-info-section"><span class="match-info-label">Map:</span><span class="match-info-value">${t.map}</span></div>`:""}\n        <div class="match-info-section"><span class="match-info-label">Start:</span><span class="match-info-value">${l(t.matchStartTime)}</span></div>\n        <div class="match-info-section"><span class="match-info-label">End:</span><span class="match-info-value">${l(t.matchEndTime)}</span></div>\n        <div class="match-info-section"><span class="match-info-label">Kills:</span><span class="match-info-value">${t.kills}</span></div>\n        <div class="match-info-section"><span class="match-info-label">Deaths:</span><span class="match-info-value">${t.deaths}</span></div>\n        <div class="match-info-section"><span class="match-info-label">KDR:</span><span class="match-info-value">${i(t.kills,t.deaths)}</span></div>\n        <div class="match-info-section"><span class="match-info-label">Duration:</span><span class="match-info-value">${c(s)}</span></div>\n        <div class="match-info-section"><span class="match-info-label">Highest Kill Streak:</span><span class="match-info-value">${o}</span></div>\n        \n        ${Object.values(m).some((t=>t>0))?`\n        <div class="match-info-section">\n            <span class="match-info-label" style="display:block;margin-bottom:6px;">Streaks (Without Dying):</span>\n            <ul style="margin:0 0 0 12px;padding:0;list-style:disc;">\n                ${m.smashStreak>0?`<li style='font-size:16px;'>Smash Streak (3): ${m.smashStreak}</li>`:""}\n                ${m.smashtacularStreak>0?`<li style='font-size:16px;'>Smashtacular Streak (5): ${m.smashtacularStreak}</li>`:""}\n                ${m.smashosaurusStreak>0?`<li style='font-size:16px;'>Smashosaurus Streak (7): ${m.smashosaurusStreak}</li>`:""}\n                ${m.smashlvaniaStreak>0?`<li style='font-size:16px;'>Smashlvania Streak (10): ${m.smashlvaniaStreak}</li>`:""}\n                ${m.monsterSmashStreak>0?`<li style='font-size:16px;'>Monster Smash Streak (15): ${m.monsterSmashStreak}</li>`:""}\n                ${m.potatoStreak>0?`<li style='font-size:16px;'>Potato Streak (20): ${m.potatoStreak}</li>`:""}\n                ${m.smashSmashStreak>0?`<li style='font-size:16px;'>Smash Smash Streak (25): ${m.smashSmashStreak}</li>`:""}\n                ${m.potoatachioStreak>0?`<li style='font-size:16px;'>Potoatachio Streak (30): ${m.potoatachioStreak}</li>`:""}\n            </ul>\n        </div>\n        `:""}\n\n        ${Object.values(d).some((t=>t>0))?`\n        <div class="match-info-section">\n            <span class="match-info-label" style="display:block;margin-bottom:6px;">Streaks (Quick Kills):</span>\n            <ul style="margin:0 0 0 12px;padding:0;list-style:disc;">\n                ${d.doubleSmash>0?`<li style='font-size:16px;'>Double Smash (2): ${d.doubleSmash}</li>`:""}\n                ${d.multiSmash>0?`<li style='font-size:16px;'>Multi Smash (3): ${d.multiSmash}</li>`:""}\n                ${d.multiMegaSmash>0?`<li style='font-size:16px;'>Multi Mega Smash (4): ${d.multiMegaSmash}</li>`:""}\n                ${d.multiMegaUltraSmash>0?`<li style='font-size:16px;'>Multi Mega Ultra Smash (5): ${d.multiMegaUltraSmash}</li>`:""}\n                ${d.gooseySmash>0?`<li style='font-size:16px;'>Goosey Smash (6): ${d.gooseySmash}</li>`:""}\n                ${d.crazyMultiMegaUltraSmash>0?`<li style='font-size:16px;'>Crazy Multi Mega Ultra Smash (7): ${d.crazyMultiMegaUltraSmash}</li>`:""}\n            </ul>\n        </div>\n        `:""}\n\n        <div class="match-info-section">\n            <span class="match-info-label" style="display:block;margin-bottom:6px;">Detected Players In Room:</span>\n            <ul style="margin:0 0 0 12px;padding:0;list-style:disc;">\n                ${r.length>0?r.map((t=>`<li style='font-size:16px;'>${t}</li>`)).join(""):'<li style="color:#aaa;font-size:16px;">No players detected</li>'}\n            </ul>\n        </div>\n        <div class="match-info-indicators">${n.join(" | ")}</div>\n    `,e.style.display="flex"}(n);const B=document.createElement("button");B.className="trash-btn",B.title="Delete this match",B.innerHTML='<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6 8V15M10 8V15M14 8V15M3 5H17M8 5V3H12V5M5 5V17C5 17.5523 5.44772 18 6 18H14C14.5523 18 15 17.5523 15 17V5" stroke="#e74c3c" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>',B.onclick=()=>function(t,e){confirm("Are you sure you want to delete this match? This action cannot be undone.")&&chrome.storage.sync.get(["currentSkid"],(a=>{const n=a.currentSkid||"Default",s=e||d;if("all"===d&&!e)return void console.warn("[SKMT][DELETE] Cannot delete individual match in All Stats mode without mode specified.");const o=u("matchHistory",n,s);chrome.storage.sync.get([o],(e=>{let a=e[o]||[];if(t<0||t>=a.length)return;a.splice(t,1)[0];let l=0,i=0,c=0,m=0,d=0,r=0;a.forEach((t=>{l+=t.kills||0,i+=t.deaths||0,t.joined&&c++,t.started&&m++,t.quit&&d++,"special"===s&&t.isSpecialMode&&!t.quit&&r++,"normal"!==s||t.isSpecialMode||t.isCustomMode||t.quit||r++,"custom"===s&&t.isCustomMode&&!t.quit&&r++}));const h={};h[u("matchHistory",n,s)]=a,h[u("gamesJoined",n,s)]=c,h[u("gamesStarted",n,s)]=m,h[u("gamesQuit",n,s)]=d,h[u("matchesCompleted",n,s)]=r,chrome.storage.sync.set(h,y)}))}))}(t.length-1-s,n.mode),o.appendChild(m),o.appendChild(M),o.appendChild(I),o.appendChild(B),a.appendChild(o)}))}document.getElementById("matchSortSelect")&&document.getElementById("matchSortSelect").addEventListener("change",(function(t){y()}))})();